Shader "NatureManufacture/HDRP/Lava River/Lava River Tesseled"
{
    Properties
    {
        _GlobalTiling("Global Tiling", Range(0.001, 100)) = 1
        [ToggleUI]_UVVDirection1UDirection0("UV Direction - V(T) U(F)", Float) = 1
        _ColdLavaMainSpeed("Cold Lava Main Speed", Vector) = (1, 1, 0, 0)
        _ColdLavaFlowUVRefresSpeed("Cold Lava Flow UV Refresh Speed", Range(0, 1)) = 0.05
        _MediumLavaMainSpeed("Medium Lava Main Speed", Vector) = (1, 1, 0, 0)
        _MediumLavaFlowUVRefreshSpeed("Medium Lava Flow UV Refresh Speed", Range(0, 1)) = 0.05
        _HotLavaMainSpeed("Hot Lava Main Speed", Vector) = (1, 1, 0, 0)
        _HotLavaFlowUVRefreshSpeed("Hot Lava Flow UV Refresh Speed", Range(0, 1)) = 0.05
        _Slope_Speed_Influence("Slope Speed Influence", Vector) = (1, 1, 0, 0)
        [NoScaleOffset]_ColdLavaAlbedo_SM("Cold Lava Albedo_SM", 2D) = "white" {}
        _ColdLavaAlbedoColor("Cold Lava Albedo Color", Color) = (1, 1, 1, 0)
        _ColdLavaAlbedoColorMultiply("Cold Lava Albedo Color Multiply ", Float) = 1
        _ColdLavaTiling("Cold Lava Tiling", Vector) = (1, 1, 0, 0)
        _ColdLavaSmoothness("Cold Lava Smoothness", Range(0, 1)) = 1
        [Normal][NoScaleOffset]_ColdLavaNormal("Cold Lava Normal", 2D) = "bump" {}
        _ColdLavaNormalScale("Cold Lava Normal Scale", Float) = 1
        [NoScaleOffset]_ColdLavaMT_AO_H_EM("Cold Lava MT_AO_H_EM", 2D) = "black" {}
        _ColdLavaMetalic("Cold Lava Metalic", Range(0, 1)) = 1
        _ColdLavaAO("Cold Lava AO", Range(0, 1)) = 1
        _MediumLavaAngle("Medium Lava Angle", Range(0.001, 90)) = 4
        _MediumLavaAngleFalloff("Medium Lava Angle Falloff", Range(0, 80)) = 0.7
        _MediumLavaHeightBlendTreshold("Medium Lava Height Blend Treshold", Range(0, 10)) = 3.76
        _MediumLavaHeightBlendStrenght("Medium Lava Height Blend Strenght", Range(0, 20)) = 2.75
        [NoScaleOffset]_MediumLavaAlbedo_SM("Medium Lava Albedo_SM", 2D) = "white" {}
        _MediumLavaAlbedoColor("Medium Lava Albedo Color", Color) = (1, 1, 1, 0)
        _MediumLavaAlbedoColorMultiply("Medium Lava Albedo Color Multiply ", Float) = 1
        _MediumLavaTiling("Medium Lava Tiling", Vector) = (2, 2, 0, 0)
        _MediumLavaSmoothness("Medium Lava Smoothness", Range(0, 1)) = 1
        [Normal][NoScaleOffset]_MediumLavaNormal("Medium Lava Normal", 2D) = "bump" {}
        _MediumLavaNormalScale("Medium Lava Normal Scale", Float) = 1
        [NoScaleOffset]_MediumLavaMT_AO_H_EM("Medium Lava MT_AO_H_EM", 2D) = "black" {}
        _MediumLavaMetallic("Medium Lava Metallic", Range(0, 1)) = 1
        _MediumLavaAO("Medium Lava AO", Range(0, 1)) = 1
        _HotLavaAngle("Hot Lava Angle", Range(0.001, 90)) = 9.8
        _HotLavaAngleFalloff("Hot Lava Angle Falloff", Range(0, 80)) = 1.5
        _HotLavaHeightBlendTreshold("Hot Lava Height Blend Treshold", Range(0, 10)) = 3.09
        _HotLavaHeightBlendStrenght("Hot Lava Height Blend Strenght", Range(0, 20)) = 2.37
        [NoScaleOffset]_HotLavaAlbedo_SM("Hot Lava Albedo_SM", 2D) = "white" {}
        _HotLavaAlbedoColor("Hot Lava Albedo Color", Color) = (1, 1, 1, 0)
        _HotLavaAlbedoColorMultiply("Hot Lava Albedo Color Multiply ", Float) = 1
        _HotLavaTiling("Hot Lava Tiling", Vector) = (1, 1, 0, 0)
        _HotLavaSmoothness("Hot Lava Smoothness", Range(0, 1)) = 1
        [Normal][NoScaleOffset]_HotLavaNormal("Hot Lava Normal", 2D) = "bump" {}
        _HotLavaNormalScale("Hot Lava Normal Scale", Float) = 1
        [NoScaleOffset]_HotLavaMT_AO_H_EM("Hot Lava MT_AO_H_EM", 2D) = "black" {}
        _HotLavaMetallic("Hot Lava Metallic", Range(0, 1)) = 1
        _HotLavaAO("Hot Lava AO", Range(0, 1)) = 1
        [HDR]_LavaEmissionColor("Lava Emission Color", Color) = (1, 0.1862055, 0, 0)
        _ColdLavaEmissionMaskIntensivity("Cold Lava Emission Mask Intensivity", Range(0, 100)) = 1.9
        _ColdLavaEmissionMaskTreshold("Cold Lava Emission Mask Treshold", Float) = 2.55
        _MediumLavaEmissionMaskIntesivity("Medium Lava Emission Mask Intesivity", Range(0, 100)) = 3.8
        _MediumLavaEmissionMaskTreshold("Medium Lava Emission Mask Treshold", Float) = 3.15
        _HotLavaEmissionMaskIntensivity("Hot Lava Emission Mask Intensivity", Range(0, 100)) = 2
        _HotLavaEmissionMaskTreshold("Hot Lava Emission Mask Treshold", Float) = 9.52
        [HDR]_RimColor("Rim Color", Color) = (1, 0, 0, 0)
        _RimLightPower("Rim Light Power", Float) = 4
        [NoScaleOffset]_Noise("Noise", 2D) = "white" {}
        _NoiseTiling("Noise Tiling", Vector) = (1, 1, 0, 0)
        _NoiseSpeed("Noise Speed", Vector) = (0.5, 0.5, 0, 0)
        _HotLavaFlowUVRefreshSpeed_1("Noise Flow UV Refresh Speed", Range(0, 1)) = 0.05
        _ColdLavaNoisePower("Cold Lava Noise Power", Range(0, 10)) = 6.45
        _MediumLavaNoisePower("Medium Lava Noise Power", Range(0, 10)) = 2.47
        _HotLavaNoisePower("Hot Lava Noise Power", Range(0, 10)) = 5.48
        _VCColdLavaHeightBlendStrenght("VC Cold Lava Height Blend Strenght", Range(0, 10)) = 10
        _VCMediumLavaHeightBlendStrenght("VC Medium Lava Height Blend Strenght", Range(0, 10)) = 10
        _VCHotLavaHeightBlendStrenght("VC Hot Lava Height Blend Strenght", Range(0, 10)) = 10
        [ToggleUI]_Dynamic_Flow("Dynamic Lava Flow", Float) = 0
        _Dynamic_Start_Position_Offset("Dynamic Start Position Offset", Float) = 0
        _Dynamic_Shape_Speed("Dynamic Shape Speed", Range(0, 10)) = 0.1
        _Dynamic_Shape_Y_Offset("Dynamic Shape Y Offset", Float) = 0
        _Dynamic_Shape_V_Curve_Power("Dynamic Shape V Curve Power", Range(-8, 8)) = 1.5
        _Dynamic_Shape_U_Curve_Power("Dynamic Shape U Curve Power", Range(-8, 8)) = 2.3
        _Dynamic_Lava_Emission_Front_Mask_Intensivity("Dynamic Lava Emission Front Mask Intensivity", Float) = 2.2
        _Dynamic_Lava_Emission_Front_Mask_Treshold("Dynamic Lava Emission Front Mask Treshold", Float) = 0.4
        _Dynamic_Lava_Emission_Intensivity("Dynamic Lava Emission Intensivity", Float) = 3
        _Dynamic_Lava_Emission_Treshold("Dynamic Lava Emission Treshold", Float) = 7
        _Tesselation_Factor("Tesselation Factor", Float) = 10
        _ColdLavaTessScale("Cold Lava Tess Scale", Float) = 0.05
        _MediumLavaTessScale("Medium Lava Tess Scale", Float) = 0.15
        _HotLavaTessScale("Hot Lava Tess Scale", Float) = 0.3
        [HideInInspector]_EmissionColor("Color", Color) = (1, 1, 1, 1)
        [HideInInspector]_RenderQueueType("Float", Float) = 1
        [HideInInspector][ToggleUI]_AddPrecomputedVelocity("Boolean", Float) = 0
        [HideInInspector][ToggleUI]_DepthOffsetEnable("Boolean", Float) = 0
        [HideInInspector][ToggleUI]_ConservativeDepthOffsetEnable("Boolean", Float) = 0
        [HideInInspector][ToggleUI]_TransparentWritingMotionVec("Boolean", Float) = 0
        [HideInInspector][ToggleUI]_AlphaCutoffEnable("Boolean", Float) = 0
        [HideInInspector]_TransparentSortPriority("_TransparentSortPriority", Float) = 0
        [HideInInspector][ToggleUI]_UseShadowThreshold("Boolean", Float) = 0
        [HideInInspector][ToggleUI]_DoubleSidedEnable("Boolean", Float) = 0
        [HideInInspector][Enum(Flip, 0, Mirror, 1, None, 2)]_DoubleSidedNormalMode("Float", Float) = 2
        [HideInInspector]_DoubleSidedConstants("Vector4", Vector) = (1, 1, -1, 0)
        [HideInInspector][Enum(Auto, 0, On, 1, Off, 2)]_DoubleSidedGIMode("Float", Float) = 0
        [HideInInspector][ToggleUI]_TransparentDepthPrepassEnable("Boolean", Float) = 0
        [HideInInspector][ToggleUI]_TransparentDepthPostpassEnable("Boolean", Float) = 0
        [HideInInspector]_SurfaceType("Float", Float) = 0
        [HideInInspector]_BlendMode("Float", Float) = 0
        [HideInInspector]_SrcBlend("Float", Float) = 1
        [HideInInspector]_DstBlend("Float", Float) = 0
        [HideInInspector]_AlphaSrcBlend("Float", Float) = 1
        [HideInInspector]_AlphaDstBlend("Float", Float) = 0
        [HideInInspector][ToggleUI]_ZWrite("Boolean", Float) = 1
        [HideInInspector][ToggleUI]_TransparentZWrite("Boolean", Float) = 0
        [HideInInspector]_CullMode("Float", Float) = 2
        [HideInInspector][ToggleUI]_EnableFogOnTransparent("Boolean", Float) = 1
        [HideInInspector]_CullModeForward("Float", Float) = 2
        [HideInInspector][Enum(Front, 1, Back, 2)]_TransparentCullMode("Float", Float) = 2
        [HideInInspector][Enum(UnityEditor.Rendering.HighDefinition.OpaqueCullMode)]_OpaqueCullMode("Float", Float) = 2
        [HideInInspector]_ZTestDepthEqualForOpaque("Float", Int) = 3
        [HideInInspector][Enum(UnityEngine.Rendering.CompareFunction)]_ZTestTransparent("Float", Float) = 4
        [HideInInspector][ToggleUI]_TransparentBackfaceEnable("Boolean", Float) = 0
        [HideInInspector][Enum(None, 0, Phong, 1)]_TessellationMode("Float", Float) = 1
        [HideInInspector]_TessellationFactorMinDistance("Float", Float) = 20
        [HideInInspector]_TessellationFactorMaxDistance("Float", Float) = 50
        [HideInInspector]_TessellationFactorTriangleSize("Float", Float) = 100
        [HideInInspector]_TessellationShapeFactor("Tessellation shape factor", Range(0, 1)) = 0.75
        [HideInInspector]_TessellationBackFaceCullEpsilon("Tessellation back face epsilon", Range(-1, 0)) = -0.25
        [HideInInspector]_TessellationMaxDisplacement("Float", Float) = 0.01
        [HideInInspector][ToggleUI]_RequireSplitLighting("Boolean", Float) = 0
        [HideInInspector][ToggleUI]_ReceivesSSR("Boolean", Float) = 1
        [HideInInspector][ToggleUI]_ReceivesSSRTransparent("Boolean", Float) = 0
        [HideInInspector][ToggleUI]_EnableBlendModePreserveSpecularLighting("Boolean", Float) = 1
        [HideInInspector][ToggleUI]_SupportDecals("Boolean", Float) = 1
        [HideInInspector]_StencilRef("Float", Int) = 0
        [HideInInspector]_StencilWriteMask("Float", Int) = 6
        [HideInInspector]_StencilRefDepth("Float", Int) = 8
        [HideInInspector]_StencilWriteMaskDepth("Float", Int) = 9
        [HideInInspector]_StencilRefMV("Float", Int) = 40
        [HideInInspector]_StencilWriteMaskMV("Float", Int) = 41
        [HideInInspector]_StencilRefDistortionVec("Float", Int) = 4
        [HideInInspector]_StencilWriteMaskDistortionVec("Float", Int) = 4
        [HideInInspector]_StencilWriteMaskGBuffer("Float", Int) = 15
        [HideInInspector]_StencilRefGBuffer("Float", Int) = 10
        [HideInInspector]_ZTestGBuffer("Float", Int) = 4
        [HideInInspector][ToggleUI]_RayTracing("Boolean", Float) = 0
        [HideInInspector][Enum(None, 0, Planar, 1, Sphere, 2, Thin, 3)]_RefractionModel("Float", Float) = 0
        [HideInInspector][NoScaleOffset]unity_Lightmaps("unity_Lightmaps", 2DArray) = "" {}
        [HideInInspector][NoScaleOffset]unity_LightmapsInd("unity_LightmapsInd", 2DArray) = "" {}
        [HideInInspector][NoScaleOffset]unity_ShadowMasks("unity_ShadowMasks", 2DArray) = "" {}
    }
    SubShader
    {
        Tags
        {
            "RenderPipeline"="HDRenderPipeline"
            "RenderType"="HDLitShader"
            "Queue"="Geometry+225"
            "DisableBatching"="LODFading"
            "ShaderGraphShader"="true"
            "ShaderGraphTargetId"="HDLitSubTarget"
        }
        Pass
        {
            Name "ShadowCaster"
            Tags
            {
                "LightMode" = "ShadowCaster"
            }
        
            // Render State
            Cull [_CullMode]
        ZWrite On
        ColorMask 0
        ZClip [_ZClip]
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_SHADOWS
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
                #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float4 packed_positionRWS_tessellationFactor : INTERP5;
             float3 positionPredisplacementRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float Alpha;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            surface.Alpha = 1;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassDepthOnly.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "META"
            Tags
            {
                "LightMode" = "META"
            }
        
            // Render State
            Cull Off
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma instancing_options renderinglayer
        #pragma target 4.5
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma shader_feature _ EDITOR_VISUALIZATION
        #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorPreInclude' */
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD1
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_POSITIONPREDISPLACEMENT_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD1
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD1
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_LIGHT_TRANSPORT
        #define RAYTRACING_SHADER_GRAPH_DEFAULT
        #define SCENEPICKINGPASS 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
            #define VARYINGS_DS_NEED_POSITIONPREDISPLACEMENT
            #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
            #define VARYINGS_DS_NEED_TEXCOORD1
            #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/PickingSpaceTransforms.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv1 : TEXCOORD1;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord1;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord1 : INTERP2;
             float4 texCoord2 : INTERP3;
             float4 texCoord3 : INTERP4;
             float4 color : INTERP5;
             float3 positionRWS : INTERP6;
             float3 positionPredisplacementRWS : INTERP7;
             float3 normalWS : INTERP8;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord1.xyzw = input.texCoord1;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.positionRWS.xyz = input.positionRWS;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord1 = input.texCoord1.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.positionRWS.xyz;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
        
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorVertMeshCustomInterpolation' */
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.positionRWS =                input.positionRWS;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS;
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord1 =                  input.texCoord1;
            output.texCoord2 =                  input.texCoord2;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorVaryingsToFragInputs' */
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorInterpolateWithBaryCoordsMeshToDS' */
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorVertMeshTesselationCustomInterpolation' */
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorCopyToSDI' */
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassLightTransport.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "ScenePickingPass"
            Tags
            {
                "LightMode" = "Picking"
            }
        
            // Render State
            Cull [_CullMode]
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma editor_sync_compilation
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_DEPTH_ONLY
        #define SCENEPICKINGPASS 1
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
                #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/PickingSpaceTransforms.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 positionRWS;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float4 packed_positionRWS_tessellationFactor : INTERP5;
             float3 positionPredisplacementRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float3 positionRWS : INTERP5;
             float3 normalWS : INTERP6;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.positionRWS.xyz = input.positionRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.positionRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.positionRWS =                input.positionRWS;
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord2 =                  input.texCoord2;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassDepthOnly.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "SceneSelectionPass"
            Tags
            {
                "LightMode" = "SceneSelectionPass"
            }
        
            // Render State
            Cull Off
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma editor_sync_compilation
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_DEPTH_ONLY
        #define RAYTRACING_SHADER_GRAPH_DEFAULT
        #define SCENESELECTIONPASS 1
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
                #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/PickingSpaceTransforms.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 positionRWS;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float4 packed_positionRWS_tessellationFactor : INTERP5;
             float3 positionPredisplacementRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float3 positionRWS : INTERP5;
             float3 normalWS : INTERP6;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.positionRWS.xyz = input.positionRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.positionRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.positionRWS =                input.positionRWS;
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord2 =                  input.texCoord2;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassDepthOnly.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "MotionVectors"
            Tags
            {
                "LightMode" = "MotionVectors"
            }
        
            // Render State
            Cull [_CullMode]
        ZWrite On
        Stencil
        {
        WriteMask [_StencilWriteMaskMV]
        Ref [_StencilRefMV]
        CompFront Always
        PassFront Replace
        CompBack Always
        PassBack Replace
        }
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma multi_compile_fragment _ WRITE_MSAA_DEPTH
        #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma multi_compile _ WRITE_NORMAL_BUFFER
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma multi_compile _ WRITE_DECAL_BUFFER
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_MOTION_VECTORS
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
                #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 positionRWS;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float4 packed_positionRWS_tessellationFactor : INTERP5;
             float3 positionPredisplacementRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float3 positionRWS : INTERP5;
             float3 normalWS : INTERP6;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.positionRWS.xyz = input.positionRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.positionRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.positionRWS =                input.positionRWS;
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord2 =                  input.texCoord2;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassMotionVectors.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "TransparentDepthPrepass"
            Tags
            {
                "LightMode" = "TransparentDepthPrepass"
            }
        
            // Render State
            Cull [_CullMode]
        Blend One Zero
        ZWrite On
        Stencil
        {
        WriteMask [_StencilWriteMaskDepth]
        Ref [_StencilRefDepth]
        CompFront Always
        PassFront Replace
        CompBack Always
        PassBack Replace
        }
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_TRANSPARENT_DEPTH_PREPASS
        #define RAYTRACING_SHADER_GRAPH_DEFAULT
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
                #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float4 uv0;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float4 packed_positionRWS_tessellationFactor : INTERP5;
             float3 positionPredisplacementRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord3 : INTERP2;
             float4 color : INTERP3;
             float3 normalWS : INTERP4;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float Alpha;
            float3 NormalTS;
            float Smoothness;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.Alpha = 1;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassDepthOnly.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "FullScreenDebug"
            Tags
            {
                "LightMode" = "FullScreenDebug"
            }
        
            // Render State
            Cull [_CullMode]
        ZTest LEqual
        ZWrite Off
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_FULL_SCREEN_DEBUG
        #define RAYTRACING_SHADER_GRAPH_DEFAULT
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
                #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 positionRWS;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float4 packed_positionRWS_tessellationFactor : INTERP5;
             float3 positionPredisplacementRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float3 positionRWS : INTERP5;
             float3 normalWS : INTERP6;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.positionRWS.xyz = input.positionRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.positionRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.positionRWS =                input.positionRWS;
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord2 =                  input.texCoord2;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassFullScreenDebug.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "DepthOnly"
            Tags
            {
                "LightMode" = "DepthOnly"
            }
        
            // Render State
            Cull [_CullMode]
        ZWrite On
        Stencil
        {
        WriteMask [_StencilWriteMaskDepth]
        Ref [_StencilRefDepth]
        CompFront Always
        PassFront Replace
        CompBack Always
        PassBack Replace
        }
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma multi_compile _ WRITE_NORMAL_BUFFER
        #pragma multi_compile_fragment _ WRITE_MSAA_DEPTH
        #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma multi_compile _ WRITE_DECAL_BUFFER
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_DEPTH_ONLY
        #define RAYTRACING_SHADER_GRAPH_DEFAULT
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
                #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 positionRWS;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float4 packed_positionRWS_tessellationFactor : INTERP5;
             float3 positionPredisplacementRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord2 : INTERP2;
             float4 texCoord3 : INTERP3;
             float4 color : INTERP4;
             float3 positionRWS : INTERP5;
             float3 normalWS : INTERP6;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.positionRWS.xyz = input.positionRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.positionRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.positionRWS =                input.positionRWS;
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord2 =                  input.texCoord2;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassDepthOnly.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "GBuffer"
            Tags
            {
                "LightMode" = "GBuffer"
            }
        
            // Render State
            Cull [_CullMode]
        ZTest [_ZTestGBuffer]
        ColorMask [_LightLayersMaskBuffer4] 4
        ColorMask [_LightLayersMaskBuffer5] 5
        Stencil
        {
        WriteMask [_StencilWriteMaskGBuffer]
        Ref [_StencilRefGBuffer]
        CompFront Always
        PassFront Replace
        CompBack Always
        PassBack Replace
        }
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma multi_compile_fragment _ LIGHT_LAYERS
        #pragma multi_compile_raytracing _ LIGHT_LAYERS
        #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ DEBUG_DISPLAY
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma multi_compile _ LIGHTMAP_ON
        #pragma multi_compile _ DIRLIGHTMAP_COMBINED
        #pragma multi_compile_fragment PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile_raytracing PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile _ DYNAMICLIGHTMAP_ON
        #pragma multi_compile_fragment _ SHADOWS_SHADOWMASK
        #pragma multi_compile_raytracing _ SHADOWS_SHADOWMASK
        #pragma multi_compile_fragment DECALS_OFF DECALS_3RT DECALS_4RT
        #pragma multi_compile_fragment _ DECAL_SURFACE_GRADIENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD1
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD1
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD1
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_GBUFFER
        #define RAYTRACING_SHADER_GRAPH_DEFAULT
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
            #define VARYINGS_DS_NEED_TEXCOORD1
            #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv1 : TEXCOORD1;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord1;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 positionRWS;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord1;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord1 : INTERP2;
             float4 texCoord2 : INTERP3;
             float4 texCoord3 : INTERP4;
             float4 color : INTERP5;
             float4 packed_positionRWS_tessellationFactor : INTERP6;
             float3 positionPredisplacementRWS : INTERP7;
             float3 normalWS : INTERP8;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord1 : INTERP2;
             float4 texCoord2 : INTERP3;
             float4 texCoord3 : INTERP4;
             float4 color : INTERP5;
             float3 positionRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord1.xyzw = input.texCoord1;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord1 = input.texCoord1.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord1.xyzw = input.texCoord1;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.positionRWS.xyz = input.positionRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord1 = input.texCoord1.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.positionRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
            float4 VTPackedFeedback;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            {
                surface.VTPackedFeedback = float4(1.0f,1.0f,1.0f,1.0f);
            }
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.positionRWS =                input.positionRWS;
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord1 =                  input.texCoord1;
            output.texCoord2 =                  input.texCoord2;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassGBuffer.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "Forward"
            Tags
            {
                "LightMode" = "Forward"
            }
        
            // Render State
            Cull [_CullModeForward]
        Blend [_SrcBlend] [_DstBlend], [_AlphaSrcBlend] [_AlphaDstBlend]
        Blend 1 SrcAlpha OneMinusSrcAlpha
        ZTest [_ZTestDepthEqualForOpaque]
        ZWrite [_ZWrite]
        ColorMask [_ColorMaskTransparentVelOne] 1
        ColorMask [_ColorMaskTransparentVelTwo] 2
        Stencil
        {
        WriteMask [_StencilWriteMask]
        Ref [_StencilRef]
        CompFront Always
        PassFront Replace
        CompBack Always
        PassBack Replace
        }
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma multi_compile _ DOTS_INSTANCING_ON
        #pragma instancing_options renderinglayer
        #pragma target 5.0
        #pragma vertex Vert
        #pragma fragment Frag
        #pragma hull Hull
        #pragma domain Domain
        #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
        #pragma multi_compile_instancing
        
            // Keywords
            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ DEBUG_DISPLAY
        #pragma multi_compile _ LOD_FADE_CROSSFADE
        #pragma shader_feature_local_domain _ _TESSELLATION_PHONG
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma multi_compile _ LIGHTMAP_ON
        #pragma multi_compile _ DIRLIGHTMAP_COMBINED
        #pragma multi_compile_fragment PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile_raytracing PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile _ DYNAMICLIGHTMAP_ON
        #pragma multi_compile_fragment _ SHADOWS_SHADOWMASK
        #pragma multi_compile_raytracing _ SHADOWS_SHADOWMASK
        #pragma multi_compile_fragment DECALS_OFF DECALS_3RT DECALS_4RT
        #pragma multi_compile_fragment _ DECAL_SURFACE_GRADIENT
        #pragma multi_compile_fragment SHADOW_LOW SHADOW_MEDIUM SHADOW_HIGH
        #pragma multi_compile_fragment AREA_SHADOW_MEDIUM AREA_SHADOW_HIGH
        #pragma multi_compile_fragment SCREEN_SPACE_SHADOWS_OFF SCREEN_SPACE_SHADOWS_ON
        #pragma multi_compile_fragment USE_FPTL_LIGHTLIST USE_CLUSTERED_LIGHTLIST
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            struct CustomInterpolators
        {
        };
        #define USE_CUSTOMINTERP_SUBSTRUCT
        
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD1
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD1
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
            #define HAVE_MESH_MODIFICATION
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD1
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_FORWARD
        #define SUPPORT_BLENDMODE_PRESERVE_SPECULAR_LIGHTING 1
        #define HAS_LIGHTLOOP 1
        #define RAYTRACING_SHADER_GRAPH_DEFAULT
        #define SHADER_LIT 1
        #define TESSELLATION_ON 1
        #define HAVE_TESSELLATION_MODIFICATION 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
            #define VARYINGS_DS_NEED_TEXCOORD1
            #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/NormalSurfaceGradient.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/Lighting.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/LightLoop/LightLoopDef.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/LightLoop/LightLoop.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitDecalData.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct AttributesMesh
        {
             float3 positionOS : POSITION;
             float3 normalOS : NORMAL;
             float4 tangentOS : TANGENT;
             float4 uv0 : TEXCOORD0;
             float4 uv1 : TEXCOORD1;
             float4 uv2 : TEXCOORD2;
             float4 uv3 : TEXCOORD3;
             float4 color : COLOR;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : INSTANCEID_SEMANTIC;
            #endif
        };
        struct VaryingsMeshToDS
        {
             float3 positionRWS;
             float3 positionPredisplacementRWS;
             float tessellationFactor;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord1;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float3 positionRWS;
             float3 normalWS;
             float4 tangentWS;
             float4 texCoord0;
             float4 texCoord1;
             float4 texCoord2;
             float4 texCoord3;
             float4 color;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct VertexDescriptionInputs
        {
             float3 ObjectSpaceNormal;
             float3 WorldSpaceNormal;
             float3 ObjectSpaceTangent;
             float3 ObjectSpacePosition;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        struct PackedVaryingsMeshToDS
        {
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord1 : INTERP2;
             float4 texCoord2 : INTERP3;
             float4 texCoord3 : INTERP4;
             float4 color : INTERP5;
             float4 packed_positionRWS_tessellationFactor : INTERP6;
             float3 positionPredisplacementRWS : INTERP7;
             float3 normalWS : INTERP8;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        struct PackedVaryingsMeshToPS
        {
            SV_POSITION_QUALIFIERS float4 positionCS : SV_POSITION;
             float4 tangentWS : INTERP0;
             float4 texCoord0 : INTERP1;
             float4 texCoord1 : INTERP2;
             float4 texCoord2 : INTERP3;
             float4 texCoord3 : INTERP4;
             float4 color : INTERP5;
             float3 positionRWS : INTERP6;
             float3 normalWS : INTERP7;
            #if UNITY_ANY_INSTANCING_ENABLED
             uint instanceID : CUSTOM_INSTANCE_ID;
            #endif
        };
        
            PackedVaryingsMeshToDS PackVaryingsMeshToDS (VaryingsMeshToDS input)
        {
            PackedVaryingsMeshToDS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToDS, output);
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord1.xyzw = input.texCoord1;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.packed_positionRWS_tessellationFactor.xyz = input.positionRWS;
            output.packed_positionRWS_tessellationFactor.w = input.tessellationFactor;
            output.positionPredisplacementRWS.xyz = input.positionPredisplacementRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToDS UnpackVaryingsMeshToDS (PackedVaryingsMeshToDS input)
        {
            VaryingsMeshToDS output;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord1 = input.texCoord1.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.packed_positionRWS_tessellationFactor.xyz;
            output.tessellationFactor = input.packed_positionRWS_tessellationFactor.w;
            output.positionPredisplacementRWS = input.positionPredisplacementRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        PackedVaryingsMeshToPS PackVaryingsMeshToPS (VaryingsMeshToPS input)
        {
            PackedVaryingsMeshToPS output;
            ZERO_INITIALIZE(PackedVaryingsMeshToPS, output);
            output.positionCS = input.positionCS;
            output.tangentWS.xyzw = input.tangentWS;
            output.texCoord0.xyzw = input.texCoord0;
            output.texCoord1.xyzw = input.texCoord1;
            output.texCoord2.xyzw = input.texCoord2;
            output.texCoord3.xyzw = input.texCoord3;
            output.color.xyzw = input.color;
            output.positionRWS.xyz = input.positionRWS;
            output.normalWS.xyz = input.normalWS;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        VaryingsMeshToPS UnpackVaryingsMeshToPS (PackedVaryingsMeshToPS input)
        {
            VaryingsMeshToPS output;
            output.positionCS = input.positionCS;
            output.tangentWS = input.tangentWS.xyzw;
            output.texCoord0 = input.texCoord0.xyzw;
            output.texCoord1 = input.texCoord1.xyzw;
            output.texCoord2 = input.texCoord2.xyzw;
            output.texCoord3 = input.texCoord3.xyzw;
            output.color = input.color.xyzw;
            output.positionRWS = input.positionRWS.xyz;
            output.normalWS = input.normalWS.xyz;
            #if UNITY_ANY_INSTANCING_ENABLED
            output.instanceID = input.instanceID;
            #endif
            return output;
        }
        
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Multiply_float3_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A * B;
        }
        
        void Unity_Add_float3(float3 A, float3 B, out float3 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float3(float Predicate, float3 True, float3 False, out float3 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float IN, out float2 UV_1_LOD_5, out float2 UV_2_LOD_4, out float FlowLerp_LOD_8, out float NonHeigblendedLerp_LOD_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_66fafc81d60b44af9ca4955d1c41a23e_A_4_Float = 0;
        float _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float;
        Unity_Absolute_float(_Split_66fafc81d60b44af9ca4955d1c41a23e_G_2_Float, _Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float);
        float _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float;
        Unity_Clamp_float(_Absolute_9ed12a85859d4c3abd48e4e3ad86a4a3_Out_1_Float, 0, 1, _Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float);
        float _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float;
        Unity_OneMinus_float(_Clamp_381065d3a34d4d03a8e14f5344363851_Out_3_Float, _OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_e2b233a02f02413b9067eba7b3be8fdb_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_8b98ec2e94864acc851f15193013d9c5_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D = _HeightMap_B;
        #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
        #else
          float4 _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.tex, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.samplerstate, _Property_455d32b94af045e4ac963d23b1a8dceb_Out_0_Texture2D.GetTransformedUV(_Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2), 0);
        #endif
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_R_5_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.r;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_G_6_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.g;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.b;
        float _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_A_8_Float = _SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_RGBA_0_Vector4.a;
        float _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2DLOD_10a9c868dad449ac8336915e052187cd_B_7_Float, 7, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float);
        float _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_d08510aad90c46c79f14152cfed0f078_Out_2_Float, _Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float);
        float _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        Unity_Clamp_float(_Power_9a99fc4a330a4c5aac5363723a9e297d_Out_2_Float, 0, 1, _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_LOD_8 = _Clamp_134461fc226e4794bd6323caf229ec29_Out_3_Float;
        NonHeigblendedLerp_LOD_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            struct VertexDescription
        {
            float3 Position;
            float3 Normal;
            float3 Tangent;
            float TessellationFactor;
            float3 TessellationDisplacement;
        };
        
        VertexDescription VertexDescriptionFunction(VertexDescriptionInputs IN)
        {
            VertexDescription description = (VertexDescription)0;
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.uv2 = IN.uv2;
            _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float;
            float _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_Mask_2_Float, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_BlackMask_3_Float);
            float3 _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.ObjectSpaceNormal, _LavaMove_e7c2dd23675f46dfb5d627bef2a4f526_OutVector3_1_Vector3, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3);
            float3 _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3;
            Unity_Add_float3(IN.ObjectSpacePosition, _Multiply_dbb7c1d4b3bc4fe0aa3119bb0c945e19_Out_2_Vector3, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3);
            float3 _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            Unity_Branch_float3(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Add_30764b0390cf4e34bc89f95f39e6d8be_Out_2_Vector3, IN.ObjectSpacePosition, _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3);
            float _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float = _Tesselation_Factor;
            UnityTexture2D _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_826d006643654800b130e720cfee9283_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float = _GlobalTiling;
            float2 _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_826d006643654800b130e720cfee9283_Out_0_Boolean, _Property_30f8ed4e6dbf49d9bed951f8353f56dd_Out_0_Vector2, _Property_b0afac94ec4546f9b499dcebb27f4454_Out_0_Float, _Property_39b80d50a1cc47f5837e0616a7b5f484_Out_0_Vector2, _Property_97e6f4af77ce47b9a2bd94a7f7e72195_Out_0_Texture2D, _Property_cf3c3ed2779248fab05956b139b70614_Out_0_Float, _Property_76c46234a6774d6b8e09471a8a609832_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction1_1_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_R_5_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_G_6_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_A_8_Float = _SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_d1dd8451b9a54063aa1bf0516031825d_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_R_5_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_G_6_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_A_8_Float = _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_RGBA_0_Vector4.a;
            float _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_2172efb0d73b1c8faebb6f1914474f78_B_7_Float, _SampleTexture2DLOD_331a330b01b7b281bef496fce2a0a0de_B_7_Float, _FlowmapUVHeighblendLOD_1eca8f73f819424d949d69151173b68d_FlowLerpLOD_8_Float, _Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float);
            float _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float;
            Unity_Add_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, -0.25, _Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float);
            float _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float = _ColdLavaTessScale;
            float _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float;
            Unity_Multiply_float_float(_Add_f5d3919f9d110f84be2db0b4e57905db_Out_2_Float, _Property_5f6191b3eec22f8691968a8c6e01b3ba_Out_0_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float);
            UnityTexture2D _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float = _GlobalTiling;
            float2 _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_129eb4e64ee94a539b4fcd33d6963539_Out_0_Boolean, _Property_d449c1fd7bee4109b74db35119b5d317_Out_0_Vector2, _Property_d11985e336744f738fa113fbe21e8b6c_Out_0_Float, _Property_a66b70fbc93c45b09178aeffbc10901a_Out_0_Vector2, _Property_ba5c124ff8cb4be699e4a9fc5e7e4a41_Out_0_Texture2D, _Property_0ae710a197254ff1bd92334a386e969d_Out_0_Float, _Property_ebac93cdf45e4381b5c5d3b4b9fd3fe8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction1_1_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_R_5_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_G_6_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_A_8_Float = _SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_56863f8742833f83a9c0285cb3a6c344_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_R_5_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_G_6_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_A_8_Float = _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_RGBA_0_Vector4.a;
            float _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_4f6be70774610b8d9dfa350c2a5d072b_B_7_Float, _SampleTexture2DLOD_477be41a2d869a8f8adf9d9278714191_B_7_Float, _FlowmapUVHeighblendLOD_9c8385ca97a6440885bcce4607a521d4_FlowLerpLOD_8_Float, _Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float);
            float _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float;
            Unity_Add_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, -0.25, _Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float);
            float _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float = _MediumLavaTessScale;
            float _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float;
            Unity_Multiply_float_float(_Add_653ccc57b165d688b8b4122d29bdb348_Out_2_Float, _Property_3174f3b50d8f8b809685448270c41957_Out_0_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float);
            float _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float;
            Unity_OneMinus_float(_Lerp_25dd283ac3bfab87951ab2950c83bd23_Out_3_Float, _OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float);
            float _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float;
            Unity_Absolute_float(_OneMinus_559f0fb51d664e529e348d84b4af292f_Out_1_Float, _Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float);
            float _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float;
            Unity_Power_float(_Absolute_e7aa87a50fd84525a05e4c15faa6ed85_Out_1_Float, _Property_29b2fd9cda5f4f5089c3a83fc03e82e9_Out_0_Float, _Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54;
            float _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_1f877a35dc84439b8975ae3495259f32_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_c6fdc37b90444cbf8cbf004b1c01d820_Out_0_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float);
            float _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float;
            Unity_Lerp_float(_Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _HeightBlendSplat_3ac7d5e8034c4654812cd8fe75675c54_Blend_1_Float, _Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float);
            UnityTexture2D _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2 = _HotLavaTiling;
            float _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float = _GlobalTiling;
            float2 _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv0 = IN.uv0;
            _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2;
            float2 _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float;
            float _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float;
            SG_FlowmapUVHeighblendLOD_6e97b1653a8a7644ea5350dc7424ee7e_float(_Property_d32c017d9c624ffa90d8984f38f746d0_Out_0_Boolean, _Property_b0bb4e9015e84d95a4bc288f0187888b_Out_0_Vector2, _Property_162f3942f5b44cc98f8accf8b6293159_Out_0_Float, _Property_120466aaf69b4fbdb89bcb097bfd6df4_Out_0_Vector2, _Property_cb85121173c148debffeebcfebf7167d_Out_0_Texture2D, _Property_277288be9f08428eb953c8ee761d793c_Out_0_Float, _Property_2a69b9c45b8e4f9b84b561e49c548b8e_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_NonHeigblendedLerpLOD_9_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction1_1_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_Fraction2_2_Float);
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV1LOD_5_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_R_5_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_G_6_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_A_8_Float = _SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_RGBA_0_Vector4.a;
            #if defined(SHADER_API_GLES) && (SHADER_TARGET < 30)
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = float4(0.0f, 0.0f, 0.0f, 1.0f);
            #else
              float4 _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4 = SAMPLE_TEXTURE2D_LOD(_Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_65b22a07dcd745828b471df9172deaa4_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_UV2LOD_4_Vector2), 0);
            #endif
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_R_5_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.r;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_G_6_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.g;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.b;
            float _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_A_8_Float = _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_RGBA_0_Vector4.a;
            float _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2DLOD_91e8940818e35d8aafb21ad7e4fb03ce_B_7_Float, _SampleTexture2DLOD_1a0cba4d76b8dc819b6dfb46b89c0786_B_7_Float, _FlowmapUVHeighblendLOD_f2414f265681413d9484094583b4e5bf_FlowLerpLOD_8_Float, _Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float);
            float _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float;
            Unity_Add_float(_Lerp_a74bf7006e0ceb81af461eaab46f23b1_Out_3_Float, -0.25, _Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float);
            float _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float = _HotLavaTessScale;
            float _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float;
            Unity_Multiply_float_float(_Add_4a55e899a9299a83877d178ae45f49f1_Out_2_Float, _Property_f6b107e5e0d31d8c98e66eefbf3de6f2_Out_0_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float);
            float _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float;
            Unity_OneMinus_float(_Lerp_79202e8722bd198a8e3c96b6f6ed9ee9_Out_3_Float, _OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float);
            float _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float;
            Unity_Absolute_float(_OneMinus_58b9e464e3ca4d479e369a8be9a7ee08_Out_1_Float, _Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float);
            float _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float;
            Unity_Power_float(_Absolute_fb324d79ccc14d32b39e90513d31b50b_Out_1_Float, _Property_d8670d1e08f54d1899644251f1099601_Out_0_Float, _Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98;
            float _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_99605ede7ecd4b6f976609d07b4629bb_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_b67bd351f0d84590833dacb1b608a490_Out_0_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float);
            float _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float;
            Unity_Lerp_float(_Lerp_bbad2bae9298a98fb0f4e5807244e03d_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _HeightBlendSplat_d14176a9145d4323b8d7eb9c4867ed98_Blend_1_Float, _Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float;
            Unity_Lerp_float(_Lerp_ba0188e0033c96818127ab277dd7743d_Out_3_Float, _Multiply_1716e0a2fbc64c82bb3125b8d0b85563_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float);
            float _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float;
            Unity_Lerp_float(_Lerp_93a62f8efa294882a3799fb182d00ce6_Out_3_Float, _Multiply_36f60bc2706a8a839dd567cffb1e3428_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float);
            float _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float;
            Unity_Lerp_float(_Lerp_614557f98d2300819fe9b855a1a93f0b_Out_3_Float, _Multiply_f3c73cf50cdf8e8689aed97f89e3046c_Out_2_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float);
            float3 _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            Unity_Multiply_float3_float3(IN.WorldSpaceNormal, (_Lerp_ef565d386ab90a89ab99065d782595a0_Out_3_Float.xxx), _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3);
            description.Position = _Branch_385f920ecee74e51ae1e55548ef40ceb_Out_3_Vector3;
            description.Normal = IN.ObjectSpaceNormal;
            description.Tangent = IN.ObjectSpaceTangent;
            description.TessellationFactor = _Property_1c6dcbf1febf4fe6b366e40a561fb8e9_Out_0_Float;
            description.TessellationDisplacement = _Multiply_dfee1dd0189c3c86b4745fd2dd2c8d54_Out_2_Vector3;
            return description;
        }
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
            float4 VTPackedFeedback;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            {
                surface.VTPackedFeedback = float4(1.0f,1.0f,1.0f,1.0f);
            }
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            
        VertexDescriptionInputs AttributesMeshToVertexDescriptionInputs(AttributesMesh input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal =                          input.normalOS;
            output.WorldSpaceNormal =                           TransformObjectToWorldNormal(input.normalOS);
            output.ObjectSpaceTangent =                         input.tangentOS.xyz;
            output.ObjectSpacePosition =                        input.positionOS;
            output.uv0 =                                        input.uv0;
            output.uv2 =                                        input.uv2;
            output.uv3 =                                        input.uv3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        VertexDescription GetVertexDescription(AttributesMesh input, float3 timeParameters
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            // Override time parameters with used one (This is required to correctly handle motion vectors for vertex animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            // evaluate vertex graph
        #ifdef HAVE_VFX_MODIFICATION
            GraphProperties properties;
            ZERO_INITIALIZE(GraphProperties, properties);
        
            // Fetch the vertex graph properties for the particle instance.
            GetElementVertexProperties(element, properties);
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs, properties);
        #else
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
        #endif
            return vertexDescription;
        
        }
        
        AttributesMesh ApplyMeshModification(AttributesMesh input, float3 timeParameters
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
            #ifdef TESSELLATION_ON
            , inout VaryingsMeshToDS varyings
            #else
            , inout VaryingsMeshToPS varyings
            #endif
        #endif
        #ifdef HAVE_VFX_MODIFICATION
                , AttributesElement element
        #endif
            )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, timeParameters
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
        
            // copy graph output to the results
            input.positionOS = vertexDescription.Position;
            input.normalOS = vertexDescription.Normal;
            input.tangentOS.xyz = vertexDescription.Tangent;
        
            
        
            return input;
        }
        
        #if defined(_ADD_CUSTOM_VELOCITY) // For shader graph custom velocity
        // Return precomputed Velocity in object space
        float3 GetCustomVelocity(AttributesMesh input
        #ifdef HAVE_VFX_MODIFICATION
            , AttributesElement element
        #endif
        )
        {
            VertexDescription vertexDescription = GetVertexDescription(input, _TimeParameters.xyz
        #ifdef HAVE_VFX_MODIFICATION
                , element
        #endif
            );
            return vertexDescription.CustomVelocity;
        }
        #endif
        
        FragInputs BuildFragInputs(VaryingsMeshToPS input)
        {
            FragInputs output;
            ZERO_INITIALIZE(FragInputs, output);
        
            // Init to some default value to make the computer quiet (else it output 'divide by zero' warning even if value is not used).
            // TODO: this is a really poor workaround, but the variable is used in a bunch of places
            // to compute normals which are then passed on elsewhere to compute other values...
            output.tangentToWorld = k_identity3x3;
            output.positionSS = input.positionCS;       // input.positionCS is SV_Position
        
            output.positionRWS =                input.positionRWS;
            output.tangentToWorld =             BuildTangentToWorld(input.tangentWS, input.normalWS);
            output.texCoord0 =                  input.texCoord0;
            output.texCoord1 =                  input.texCoord1;
            output.texCoord2 =                  input.texCoord2;
            output.texCoord3 =                  input.texCoord3;
            output.color =                      input.color;
        
        #ifdef HAVE_VFX_MODIFICATION
            // FragInputs from VFX come from two places: Interpolator or CBuffer.
        #if VFX_USE_GRAPH_VALUES
            uint instanceActiveIndex = asuint(UNITY_ACCESS_INSTANCED_PROP(PerInstance, _InstanceActiveIndex));
            /* WARNING: $splice Could not find named fragment 'VFXLoadGraphValues' */
        #endif
        
            /* WARNING: $splice Could not find named fragment 'VFXSetFragInputs' */
        
        #endif
        
            // splice point to copy custom interpolator fields from varyings to frag inputs
            
        
            return output;
        }
        
        // existing HDRP code uses the combined function to go directly from packed to frag inputs
        FragInputs UnpackVaryingsMeshToFragInputs(PackedVaryingsMeshToPS input)
        {
            UNITY_SETUP_INSTANCE_ID(input);
        #if defined(HAVE_VFX_MODIFICATION) && defined(UNITY_INSTANCING_ENABLED)
            unity_InstanceID = input.instanceID;
        #endif
            VaryingsMeshToPS unpacked = UnpackVaryingsMeshToPS(input);
            return BuildFragInputs(unpacked);
        }
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
            output.ObjectSpaceNormal = TransformWorldToObjectNormal(input.normalWS);
            output.WorldSpaceNormal = input.normalWS;
            output.ObjectSpaceTangent = TransformWorldToObjectDir(input.tangentWS.xyz);
            output.ObjectSpacePosition = TransformWorldToObject(input.positionRWS);
            output.uv0 = input.texCoord0;
            output.uv2 = input.texCoord2;
            output.uv3 = input.texCoord3;
            output.VertexColor = input.color;
            output.TimeParameters = _TimeParameters.xyz; // Note: in case of animation this will be overwrite (allow to handle motion vector)
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
            vertexDescriptionInputs.TimeParameters = timeParameters;
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                builtinData.vtPackedFeedback = surfaceDescription.VTPackedFeedback;
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassForward.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
    }
    SubShader
    {
        Tags
        {
            "RenderPipeline"="HDRenderPipeline"
            "RenderType"="HDLitShader"
            "Queue"="Geometry+225"
            "DisableBatching"="LODFading"
            "ShaderGraphShader"="true"
            "ShaderGraphTargetId"="HDLitSubTarget"
        }
        Pass
        {
            Name "IndirectDXR"
            Tags
            {
                "LightMode" = "IndirectDXR"
            }
        
            // Render State
            // RenderState: <None>
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma target 5.0
        #pragma raytracing surface_shader
        #pragma only_renderers d3d11 xboxseries ps5
        
            // Keywords
            #pragma multi_compile _ MULTI_BOUNCE_INDIRECT
        #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ DEBUG_DISPLAY
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma multi_compile _ LIGHTMAP_ON
        #pragma multi_compile _ DIRLIGHTMAP_COMBINED
        #pragma multi_compile_fragment PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile_raytracing PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile _ DYNAMICLIGHTMAP_ON
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorPreInclude' */
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD1
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD1
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD1
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_RAYTRACING_INDIRECT
        #define SHADOW_LOW
        #define RAYTRACING_SHADER_GRAPH_RAYTRACED
        #define HAS_LIGHTLOOP 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
            #define VARYINGS_DS_NEED_TEXCOORD1
            #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingMacros.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracingLightLoop.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingIntersection.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/Lighting.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/LightLoop/LightLoopDef.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingLightLoop.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RayTracingCommon.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        
            //Interpolator Packs: <None>
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            // GraphVertex: <None>
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorInterpolateWithBaryCoordsMeshToDS' */
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorVertMeshTesselationCustomInterpolation' */
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorCopyToSDI' */
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassRaytracingIndirect.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "VisibilityDXR"
            Tags
            {
                "LightMode" = "VisibilityDXR"
            }
        
            // Render State
            // RenderState: <None>
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma target 5.0
        #pragma raytracing surface_shader
        #pragma only_renderers d3d11 xboxseries ps5
        
            // Keywords
            #pragma multi_compile _ TRANSPARENT_COLOR_SHADOW
        #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorPreInclude' */
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_RAYTRACING_VISIBILITY
        #define RAYTRACING_SHADER_GRAPH_RAYTRACED
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
                #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingMacros.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracingLightLoop.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingIntersection.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RayTracingCommon.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        
            //Interpolator Packs: <None>
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            // GraphVertex: <None>
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorInterpolateWithBaryCoordsMeshToDS' */
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorVertMeshTesselationCustomInterpolation' */
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorCopyToSDI' */
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassRaytracingVisibility.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "ForwardDXR"
            Tags
            {
                "LightMode" = "ForwardDXR"
            }
        
            // Render State
            // RenderState: <None>
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma target 5.0
        #pragma raytracing surface_shader
        #pragma only_renderers d3d11 xboxseries ps5
        
            // Keywords
            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ DEBUG_DISPLAY
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma multi_compile _ LIGHTMAP_ON
        #pragma multi_compile _ DIRLIGHTMAP_COMBINED
        #pragma multi_compile_fragment PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile_raytracing PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile _ DYNAMICLIGHTMAP_ON
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorPreInclude' */
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD1
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD1
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD1
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_RAYTRACING_FORWARD
        #define SHADOW_LOW
        #define RAYTRACING_SHADER_GRAPH_RAYTRACED
        #define HAS_LIGHTLOOP 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
            #define VARYINGS_DS_NEED_TEXCOORD1
            #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingMacros.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracingLightLoop.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingIntersection.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/Lighting.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/LightLoop/LightLoopDef.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingLightLoop.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RayTracingCommon.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        
            //Interpolator Packs: <None>
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            // GraphVertex: <None>
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorInterpolateWithBaryCoordsMeshToDS' */
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorVertMeshTesselationCustomInterpolation' */
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorCopyToSDI' */
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassRaytracingForward.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "GBufferDXR"
            Tags
            {
                "LightMode" = "GBufferDXR"
            }
        
            // Render State
            // RenderState: <None>
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma target 5.0
        #pragma raytracing surface_shader
        #pragma only_renderers d3d11 xboxseries ps5
        
            // Keywords
            #pragma multi_compile _ MINIMAL_GBUFFER
        #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma multi_compile _ DEBUG_DISPLAY
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma multi_compile _ LIGHTMAP_ON
        #pragma multi_compile _ DIRLIGHTMAP_COMBINED
        #pragma multi_compile_fragment PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile_raytracing PROBE_VOLUMES_OFF PROBE_VOLUMES_L1 PROBE_VOLUMES_L2
        #pragma multi_compile _ DYNAMICLIGHTMAP_ON
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorPreInclude' */
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD1
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD1
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD1
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_RAYTRACING_GBUFFER
        #define SHADOW_LOW
        #define RAYTRACING_SHADER_GRAPH_RAYTRACED
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
            #define VARYINGS_DS_NEED_TEXCOORD1
            #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingMacros.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracingLightLoop.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/Deferred/RaytracingIntersectonGBuffer.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/StandardLit/StandardLit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RayTracingCommon.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        
            //Interpolator Packs: <None>
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            // GraphVertex: <None>
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorInterpolateWithBaryCoordsMeshToDS' */
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorVertMeshTesselationCustomInterpolation' */
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorCopyToSDI' */
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassRaytracingGBuffer.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
        Pass
        {
            Name "DebugDXR"
            Tags
            {
                "LightMode" = "DebugDXR"
            }
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma target 5.0
        #pragma raytracing surface_shader
        #pragma only_renderers d3d11 xboxseries ps5
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingMacros.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingIntersection.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RayTracingCommon.hlsl"
        	// GraphIncludes: <None>
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassRayTracingDebug.hlsl"
        
            ENDHLSL
        }
        Pass
        {
            Name "PathTracingDXR"
            Tags
            {
                "LightMode" = "PathTracingDXR"
            }
        
            // Render State
            // RenderState: <None>
        
            // Debug
            // <None>
        
            // --------------------------------------------------
            // Pass
        
            HLSLPROGRAM
        
            // Pragmas
            #pragma target 5.0
        #pragma raytracing surface_shader
        #pragma only_renderers d3d11 xboxseries ps5
        
            // Keywords
            #pragma shader_feature _ _SURFACE_TYPE_TRANSPARENT
        #pragma shader_feature_local _ _DOUBLESIDED_ON
        #pragma shader_feature_local _ _ADD_PRECOMPUTED_VELOCITY
        #pragma shader_feature_local _ _TRANSPARENT_WRITES_MOTION_VEC
        #pragma shader_feature_local_fragment _ _ENABLE_FOG_ON_TRANSPARENT
        #pragma shader_feature_local_fragment _ _DISABLE_DECALS
        #pragma shader_feature_local_raytracing _ _DISABLE_DECALS
        #pragma shader_feature_local_fragment _ _DISABLE_SSR
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR
        #pragma shader_feature_local_fragment _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local_raytracing _ _DISABLE_SSR_TRANSPARENT
        #pragma shader_feature_local _ _REFRACTION_PLANE _REFRACTION_SPHERE _REFRACTION_THIN
            // GraphKeywords: <None>
        
            // For custom interpolators to inject a substruct definition before FragInputs definition,
            // allowing for FragInputs to capture CI's intended for ShaderGraph's SDI.
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorPreInclude' */
        
        
            // TODO: Merge FragInputsVFX substruct with CustomInterpolators.
        	#ifdef HAVE_VFX_MODIFICATION
        	struct FragInputsVFX
            {
                /* WARNING: $splice Could not find named fragment 'FragInputsVFX' */
            };
            #endif
        
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl" // Required by Tessellation.hlsl
        	#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Tessellation.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Texture.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPass.cs.hlsl"
            #include "Packages/com.unity.render-pipelines.core/ShaderLibrary/TextureStack.hlsl" // Required to be include before we include properties as it define DECLARE_STACK_CB
            // Always include Shader Graph version
            // Always include last to avoid double macros
            #include "Packages/com.unity.shadergraph/ShaderGraphLibrary/Functions.hlsl" // Need to be here for Gradient struct definition
        
            // --------------------------------------------------
            // Defines
        
            // Attribute
            #define ATTRIBUTES_NEED_NORMAL
            #define ATTRIBUTES_NEED_TANGENT
            #define ATTRIBUTES_NEED_TEXCOORD0
            #define ATTRIBUTES_NEED_TEXCOORD1
            #define ATTRIBUTES_NEED_TEXCOORD2
            #define ATTRIBUTES_NEED_TEXCOORD3
            #define ATTRIBUTES_NEED_COLOR
            #define VARYINGS_NEED_POSITION_WS
            #define VARYINGS_NEED_TANGENT_TO_WORLD
            #define VARYINGS_NEED_TEXCOORD0
            #define VARYINGS_NEED_TEXCOORD1
            #define VARYINGS_NEED_TEXCOORD2
            #define VARYINGS_NEED_TEXCOORD3
            #define VARYINGS_NEED_COLOR
        
        
            //Strip down the FragInputs.hlsl (on graphics), so we can only optimize the interpolators we use.
            //if by accident something requests contents of FragInputs.hlsl, it will be caught as a compiler error
            //Frag inputs stripping is only enabled when FRAG_INPUTS_ENABLE_STRIPPING is set
            #if !defined(SHADER_STAGE_RAY_TRACING) && SHADERPASS != SHADERPASS_RAYTRACING_GBUFFER && SHADERPASS != SHADERPASS_FULL_SCREEN_DEBUG
            #define FRAG_INPUTS_ENABLE_STRIPPING
            #endif
            #define FRAG_INPUTS_USE_TEXCOORD0
            #define FRAG_INPUTS_USE_TEXCOORD1
            #define FRAG_INPUTS_USE_TEXCOORD2
            #define FRAG_INPUTS_USE_TEXCOORD3
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/FragInputs.hlsl"
        
        
        
            #define SHADERPASS SHADERPASS_PATH_TRACING
        #define SHADOW_LOW
        #define RAYTRACING_SHADER_GRAPH_DEFAULT
        #define HAS_LIGHTLOOP 1
        
            #ifdef TESSELLATION_ON
            // World and normal are always available
                #define VARYINGS_DS_NEED_TANGENT
            #define VARYINGS_DS_NEED_TEXCOORD0
            #define VARYINGS_DS_NEED_TEXCOORD1
            #define VARYINGS_DS_NEED_TEXCOORD2
            #define VARYINGS_DS_NEED_TEXCOORD3
            #define VARYINGS_DS_NEED_COLOR
        	#endif
        
            // Following two define are a workaround introduce in 10.1.x for RaytracingQualityNode
            // The ShaderGraph don't support correctly migration of this node as it serialize all the node data
            // in the json file making it impossible to uprgrade. Until we get a fix, we do a workaround here
            // to still allow us to rename the field and keyword of this node without breaking existing code.
            #ifdef RAYTRACING_SHADER_GRAPH_DEFAULT
            #define RAYTRACING_SHADER_GRAPH_HIGH
            #endif
        
            #ifdef RAYTRACING_SHADER_GRAPH_RAYTRACED
            #define RAYTRACING_SHADER_GRAPH_LOW
            #endif
            // end
        
            #ifndef SHADER_UNLIT
            // We need isFrontFace when using double sided - it is not required for unlit as in case of unlit double sided only drive the cullmode
            // VARYINGS_NEED_CULLFACE can be define by VaryingsMeshToPS.FaceSign input if a IsFrontFace Node is included in the shader graph.
            #if defined(_DOUBLESIDED_ON) && !defined(VARYINGS_NEED_CULLFACE)
                #define VARYINGS_NEED_CULLFACE
            #endif
            #endif
        
            // Specific Material Define
        #define _AMBIENT_OCCLUSION 1
        #define _SPECULAR_OCCLUSION_FROM_AO 1
        #define _ENERGY_CONSERVING_SPECULAR 1
        
        // If we use subsurface scattering, enable output split lighting (for forward pass)
        #if defined(_MATERIAL_FEATURE_SUBSURFACE_SCATTERING) && !defined(_SURFACE_TYPE_TRANSPARENT)
            #define OUTPUT_SPLIT_LIGHTING
        #endif
        
        // This shader support recursive rendering for raytracing
        #define HAVE_RECURSIVE_RENDERING
        
        // In Path Tracing, For all single-sided, refractive materials, we want to force a thin refraction model
        #if (SHADERPASS == SHADERPASS_PATH_TRACING) && !defined(_DOUBLESIDED_ON) && (defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE))
            #undef  _REFRACTION_PLANE
            #undef  _REFRACTION_SPHERE
            #define _REFRACTION_THIN
        #endif
            // Caution: we can use the define SHADER_UNLIT onlit after the above Material include as it is the Unlit template who define it
        
            // To handle SSR on transparent correctly with a possibility to enable/disable it per framesettings
            // we should have a code like this:
            // if !defined(_DISABLE_SSR_TRANSPARENT)
            // pragma multi_compile _ WRITE_NORMAL_BUFFER
            // endif
            // i.e we enable the multicompile only if we can receive SSR or not, and then C# code drive
            // it based on if SSR transparent in frame settings and not (and stripper can strip it).
            // this is currently not possible with our current preprocessor as _DISABLE_SSR_TRANSPARENT is a keyword not a define
            // so instead we used this and chose to pay the extra cost of normal write even if SSR transaprent is disabled.
            // Ideally the shader graph generator should handle it but condition below can't be handle correctly for now.
            #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
            #if !defined(_DISABLE_SSR_TRANSPARENT) && !defined(SHADER_UNLIT)
                #define WRITE_NORMAL_BUFFER
            #endif
            #endif
        
            #ifndef DEBUG_DISPLAY
                // In case of opaque we don't want to perform the alpha test, it is done in depth prepass and we use depth equal for ztest (setup from UI)
                // Don't do it with debug display mode as it is possible there is no depth prepass in this case
                #if !defined(_SURFACE_TYPE_TRANSPARENT)
                    #if SHADERPASS == SHADERPASS_FORWARD
                    #define SHADERPASS_FORWARD_BYPASS_ALPHA_TEST
                    #elif SHADERPASS == SHADERPASS_GBUFFER
                    #define SHADERPASS_GBUFFER_BYPASS_ALPHA_TEST
                    #endif
                #endif
            #endif
        
            // Define _DEFERRED_CAPABLE_MATERIAL for shader capable to run in deferred pass
            #if defined(SHADER_LIT) && !defined(_SURFACE_TYPE_TRANSPARENT)
                #define _DEFERRED_CAPABLE_MATERIAL
            #endif
        
            // Translate transparent motion vector define
            #if defined(_TRANSPARENT_WRITES_MOTION_VEC) && defined(_SURFACE_TYPE_TRANSPARENT)
                #define _WRITE_TRANSPARENT_MOTION_VECTOR
            #endif
        
            // -- Graph Properties
            CBUFFER_START(UnityPerMaterial)
        float _Dynamic_Shape_Y_Offset;
        float _Dynamic_Start_Position_Offset;
        float _Tesselation_Factor;
        float _GlobalTiling;
        float _UVVDirection1UDirection0;
        float2 _ColdLavaMainSpeed;
        float2 _MediumLavaMainSpeed;
        float _HotLavaFlowUVRefreshSpeed_1;
        float2 _HotLavaMainSpeed;
        float4 _ColdLavaAlbedo_SM_TexelSize;
        float4 _ColdLavaAlbedoColor;
        float _ColdLavaAlbedoColorMultiply;
        float2 _ColdLavaTiling;
        float _ColdLavaSmoothness;
        float4 _ColdLavaNormal_TexelSize;
        float _ColdLavaNormalScale;
        float4 _ColdLavaMT_AO_H_EM_TexelSize;
        float _ColdLavaMetalic;
        float _ColdLavaAO;
        float _ColdLavaTessScale;
        float _MediumLavaAngle;
        float _MediumLavaAngleFalloff;
        float _MediumLavaHeightBlendTreshold;
        float _MediumLavaHeightBlendStrenght;
        float4 _MediumLavaAlbedo_SM_TexelSize;
        float4 _MediumLavaAlbedoColor;
        float _MediumLavaAlbedoColorMultiply;
        float2 _MediumLavaTiling;
        float _MediumLavaSmoothness;
        float4 _MediumLavaNormal_TexelSize;
        float _MediumLavaNormalScale;
        float4 _MediumLavaMT_AO_H_EM_TexelSize;
        float _MediumLavaMetallic;
        float _MediumLavaAO;
        float _MediumLavaTessScale;
        float _HotLavaAngle;
        float _HotLavaAngleFalloff;
        float _HotLavaHeightBlendTreshold;
        float _HotLavaHeightBlendStrenght;
        float4 _HotLavaAlbedo_SM_TexelSize;
        float4 _HotLavaAlbedoColor;
        float _HotLavaAlbedoColorMultiply;
        float2 _HotLavaTiling;
        float _HotLavaSmoothness;
        float4 _HotLavaNormal_TexelSize;
        float _HotLavaNormalScale;
        float4 _HotLavaMT_AO_H_EM_TexelSize;
        float _HotLavaMetallic;
        float _HotLavaAO;
        float _HotLavaTessScale;
        float _ColdLavaFlowUVRefresSpeed;
        float _MediumLavaFlowUVRefreshSpeed;
        float _HotLavaFlowUVRefreshSpeed;
        float4 _LavaEmissionColor;
        float _ColdLavaEmissionMaskIntensivity;
        float _ColdLavaEmissionMaskTreshold;
        float _MediumLavaEmissionMaskIntesivity;
        float _MediumLavaEmissionMaskTreshold;
        float _HotLavaEmissionMaskIntensivity;
        float _HotLavaEmissionMaskTreshold;
        float4 _RimColor;
        float _RimLightPower;
        float4 _Noise_TexelSize;
        float2 _NoiseTiling;
        float2 _NoiseSpeed;
        float _ColdLavaNoisePower;
        float _MediumLavaNoisePower;
        float _HotLavaNoisePower;
        float _VCColdLavaHeightBlendStrenght;
        float _VCMediumLavaHeightBlendStrenght;
        float _VCHotLavaHeightBlendStrenght;
        float _Dynamic_Shape_Speed;
        float _Dynamic_Shape_U_Curve_Power;
        float _Dynamic_Shape_V_Curve_Power;
        float _Dynamic_Lava_Emission_Intensivity;
        float _Dynamic_Lava_Emission_Treshold;
        float2 _Slope_Speed_Influence;
        float _Dynamic_Lava_Emission_Front_Mask_Treshold;
        float _Dynamic_Lava_Emission_Front_Mask_Intensivity;
        float _Dynamic_Flow;
        float4 _EmissionColor;
        float _UseShadowThreshold;
        float4 _DoubleSidedConstants;
        float _BlendMode;
        float _TessellationFactorMinDistance;
        float _TessellationFactorMaxDistance;
        float _TessellationFactorTriangleSize;
        float _TessellationShapeFactor;
        float _TessellationBackFaceCullEpsilon;
        float _TessellationMaxDisplacement;
        float _EnableBlendModePreserveSpecularLighting;
        float _RayTracing;
        float _RefractionModel;
        CBUFFER_END
        
        
        // Object and Global properties
        SAMPLER(SamplerState_Linear_Repeat);
        SAMPLER(SamplerState_Linear_Repeat_Aniso8);
        TEXTURE2D(_ColdLavaAlbedo_SM);
        SAMPLER(sampler_ColdLavaAlbedo_SM);
        TEXTURE2D(_ColdLavaNormal);
        SAMPLER(sampler_ColdLavaNormal);
        TEXTURE2D(_ColdLavaMT_AO_H_EM);
        SAMPLER(sampler_ColdLavaMT_AO_H_EM);
        TEXTURE2D(_MediumLavaAlbedo_SM);
        SAMPLER(sampler_MediumLavaAlbedo_SM);
        TEXTURE2D(_MediumLavaNormal);
        SAMPLER(sampler_MediumLavaNormal);
        TEXTURE2D(_MediumLavaMT_AO_H_EM);
        SAMPLER(sampler_MediumLavaMT_AO_H_EM);
        TEXTURE2D(_HotLavaAlbedo_SM);
        SAMPLER(sampler_HotLavaAlbedo_SM);
        TEXTURE2D(_HotLavaNormal);
        SAMPLER(sampler_HotLavaNormal);
        TEXTURE2D(_HotLavaMT_AO_H_EM);
        SAMPLER(sampler_HotLavaMT_AO_H_EM);
        TEXTURE2D(_Noise);
        SAMPLER(sampler_Noise);
        
            // -- Property used by ScenePickingPass
            #ifdef SCENEPICKINGPASS
            float4 _SelectionID;
            #endif
        
            // -- Properties used by SceneSelectionPass
            #ifdef SCENESELECTIONPASS
            int _ObjectId;
            int _PassValue;
            #endif
        
            // Includes
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingMacros.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/ShaderVariablesRaytracingLightLoop.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingIntersection.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/Lighting.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Lighting/LightLoop/LightLoopDef.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/Lit.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Lit/LitPathTracing.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/BuiltinUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/MaterialUtilities.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RayTracingCommon.hlsl"
        #include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderGraphFunctions.hlsl"
        	// GraphIncludes: <None>
        
            // --------------------------------------------------
            // Structs and Packing
        
            struct SurfaceDescriptionInputs
        {
             float3 WorldSpaceNormal;
             float3 TangentSpaceNormal;
             float3 WorldSpaceTangent;
             float3 WorldSpaceBiTangent;
             float3 WorldSpaceViewDirection;
             float3 TangentSpaceViewDirection;
             float4 uv0;
             float4 uv2;
             float4 uv3;
             float4 VertexColor;
             float3 TimeParameters;
        };
        
            //Interpolator Packs: <None>
        
            // --------------------------------------------------
            // Graph
        
        
            // Graph Functions
            
        void Unity_Absolute_float(float In, out float Out)
        {
            Out = abs(In);
        }
        
        void Unity_Clamp_float(float In, float Min, float Max, out float Out)
        {
            Out = clamp(In, Min, Max);
        }
        
        void Unity_OneMinus_float(float In, out float Out)
        {
            Out = 1 - In;
        }
        
        void Unity_Multiply_float2_float2(float2 A, float2 B, out float2 Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float2(float2 A, float2 B, out float2 Out)
        {
            Out = A + B;
        }
        
        void Unity_Branch_float2(float Predicate, float2 True, float2 False, out float2 Out)
        {
            Out = Predicate ? True : False;
        }
        
        void Unity_Multiply_float_float(float A, float B, out float Out)
        {
        Out = A * B;
        }
        
        void Unity_Add_float(float A, float B, out float Out)
        {
            Out = A + B;
        }
        
        void Unity_Fraction_float(float In, out float Out)
        {
            Out = frac(In);
        }
        
        void Unity_Divide_float(float A, float B, out float Out)
        {
            Out = A / B;
        }
        
        void Unity_Sine_float(float In, out float Out)
        {
            Out = sin(In);
        }
        
        void Unity_Power_float(float A, float B, out float Out)
        {
            Out = pow(A, B);
        }
        
        struct Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, UnityTexture2D _HeightMap_B, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float IN, out float2 UV_1_7, out float2 UV_2_6, out float FlowLerp_3, out float FlowNonHeigblendedLerp_9, out float Fraction_1_1, out float Fraction_2_2)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UnityTexture2D _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D = _HeightMap_B;
        float4 _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.tex, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.samplerstate, _Property_356ce9056fc544f8856bbafa83a6b8f2_Out_0_Texture2D.GetTransformedUV(_Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2) );
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_R_4_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.r;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_G_5_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.g;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.b;
        float _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_A_7_Float = _SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_RGBA_0_Vector4.a;
        float _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float;
        Unity_Multiply_float_float(_SampleTexture2D_c5bf7b5dfd3d47338f0698463c68228c_B_6_Float, 7, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float);
        float _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float;
        Unity_Power_float(_Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float, _Multiply_cc46294d59e74987a182db87f0cdd3f7_Out_2_Float, _Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float);
        float _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        Unity_Clamp_float(_Power_45c7600ee2fa44349461174061fff9f7_Out_2_Float, 0, 1, _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float);
        float _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float);
        float _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        FlowLerp_3 = _Clamp_ca7963fdad79479c876e733ec49a0460_Out_3_Float;
        FlowNonHeigblendedLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Fraction_1_1 = _Fraction_16e6c9ca4d414f9a8a83dc1aaace91bb_Out_1_Float;
        Fraction_2_2 = _Fraction_32e80c4d5759499f9d813181d401dad2_Out_1_Float;
        }
        
        void Unity_Lerp_float4(float4 A, float4 B, float4 T, out float4 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Multiply_float4_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A * B;
        }
        
        void Unity_Combine_float(float R, float G, float B, float A, out float4 RGBA, out float3 RGB, out float2 RG)
        {
            RGBA = float4(R, G, B, A);
            RGB = float3(R, G, B);
            RG = float2(R, G);
        }
        
        void Unity_Subtract_float(float A, float B, out float Out)
        {
            Out = A - B;
        }
        
        void Unity_Saturate_float(float In, out float Out)
        {
            Out = saturate(In);
        }
        
        struct Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float
        {
        };
        
        void SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(float Vector1_3D7AF960, float Vector1_23CABB44, float Vector1_50A6BA5E, Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float IN, out float Blend_1)
        {
        float _Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float = Vector1_3D7AF960;
        float _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float = Vector1_23CABB44;
        float _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float;
        Unity_Multiply_float_float(_Property_804e86228598eb8b92ce6c007ac5fbc9_Out_0_Float, _Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, _Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float);
        float _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_fb91b2b13771718bb4cb013bab2768ac_Out_2_Float, 4, _Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float);
        float _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float;
        Unity_Multiply_float_float(_Property_9dc4e2ee5a613e8bacccce3aeee46c32_Out_0_Float, 2, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float);
        float _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float;
        Unity_Add_float(_Multiply_aa534fa162410f8f935b21bd5d9c58ab_Out_2_Float, _Multiply_283464c99bf1ac8789d1ff8ec1948e00_Out_2_Float, _Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float);
        float _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float;
        Unity_Absolute_float(_Add_4b45f8bab5909883a71690c307b567a2_Out_2_Float, _Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float);
        float _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float = Vector1_50A6BA5E;
        float _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float;
        Unity_Power_float(_Absolute_3d1440cf68e24d60b4c40bc66c13c0e5_Out_1_Float, _Property_d01ca21e1ed88487b7c132aa64b85be9_Out_0_Float, _Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float);
        float _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        Unity_Saturate_float(_Power_376a71f1029b5d888cc4d93d7d8eb032_Out_2_Float, _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float);
        Blend_1 = _Saturate_f8e2104d93edb487bdad4a3604d89b6b_Out_1_Float;
        }
        
        void Unity_Lerp_float(float A, float B, float T, out float Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Lerp_float3(float3 A, float3 B, float3 T, out float3 Out)
        {
            Out = lerp(A, B, T);
        }
        
        void Unity_Smoothstep_float(float Edge1, float Edge2, float In, out float Out)
        {
            Out = smoothstep(Edge1, Edge2, In);
        }
        
        struct Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float
        {
        half4 uv2;
        float3 TimeParameters;
        };
        
        void SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(float _Lava_Move, float _Lava_Blend, float _Lava_Blend_Length, float _Lava_Position, float _Speed, Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float IN, out float3 OutVector3_1, out float Mask_2, out float BlackMask_3)
        {
        float _Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float = _Lava_Position;
        float _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float = _Speed;
        float _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float;
        Unity_Multiply_float_float(IN.TimeParameters.x, _Property_e7f9cc195866428a85d01e3ecd313a79_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float);
        float _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float;
        Unity_Add_float(_Property_2a185003c3494beeb70cdf5ed0e65bcd_Out_0_Float, _Multiply_9e68ac9cbbee4bd89bda6f5e83200ba1_Out_2_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float);
        float _Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float = _Lava_Blend_Length;
        float _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float;
        Unity_Add_float(_Property_c36e7c40bdfb40a1b331d81d87dc8ea2_Out_0_Float, _Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float);
        float4 _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4 = IN.uv2;
        float _Split_1c5a40226cc8434d858bb235be3df686_R_1_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[0];
        float _Split_1c5a40226cc8434d858bb235be3df686_G_2_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[1];
        float _Split_1c5a40226cc8434d858bb235be3df686_B_3_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[2];
        float _Split_1c5a40226cc8434d858bb235be3df686_A_4_Float = _UV_3e2c7754188f4248b45724449a0b0102_Out_0_Vector4[3];
        float Constant_07fa30ece4ce41b5b24296e8ca24455e = 3.141593;
        float _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float;
        Unity_Multiply_float_float(_Split_1c5a40226cc8434d858bb235be3df686_G_2_Float, Constant_07fa30ece4ce41b5b24296e8ca24455e, _Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float);
        float _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float;
        Unity_Sine_float(_Multiply_a446488e00e945cb9bdfe5be3426f420_Out_2_Float, _Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float);
        float _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float;
        Unity_OneMinus_float(_Sine_246d772169bc44e8a89cd956f8db3945_Out_1_Float, _OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float);
        float _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float = _Lava_Blend;
        float _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float;
        Unity_Multiply_float_float(_OneMinus_5a23f296bc0d4c259759488043d04af8_Out_1_Float, _Property_e47653aa77f64be691ab7fbc06e93a03_Out_0_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float);
        float _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float;
        Unity_Add_float(_Split_1c5a40226cc8434d858bb235be3df686_R_1_Float, _Multiply_da8ac054968b49f2902ac2cb6adbf7ce_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float);
        float _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float;
        Unity_Smoothstep_float(_Add_89e5e16041eb42c185127581c324d3ef_Out_2_Float, _Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float);
        float _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float = _Lava_Move;
        float _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float;
        Unity_Multiply_float_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Property_9b3bca5a847f487c9f9ea762b17e9e6f_Out_0_Float, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float);
        float3 _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3 = float3(0, _Multiply_cfe5164c85184498b5f555c37c60f6e7_Out_2_Float, 0);
        float _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        Unity_Fraction_float(_Smoothstep_cdbeceeb99e04282a57ed4060a77ccfa_Out_3_Float, _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float);
        float _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float;
        Unity_Subtract_float(_Add_c00f6c5fae1f40ce848e7c22007c4187_Out_2_Float, _Add_14d2aa97a990488095216c24e0fce025_Out_2_Float, _Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float);
        float _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        Unity_Clamp_float(_Subtract_8953bd445cba4da5bd2f520f8181e98d_Out_2_Float, 0, 1, _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float);
        OutVector3_1 = _Vector3_6776765fcd694cd4a1fda0cee619f6fd_Out_0_Vector3;
        Mask_2 = _Fraction_534e1fabf58244d58a8b4810525daf90_Out_1_Float;
        BlackMask_3 = _Clamp_f8658c6871554a12b16cd7ce892df954_Out_3_Float;
        }
        
        void Unity_Maximum_float(float A, float B, out float Out)
        {
            Out = max(A, B);
        }
        
        void Unity_Branch_float(float Predicate, float True, float False, out float Out)
        {
            Out = Predicate ? True : False;
        }
        
        struct Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float
        {
        float3 WorldSpaceNormal;
        half4 uv0;
        half4 uv3;
        };
        
        void SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(float _UV_Direction_V_T_U_F, float2 _Texture_Tiling, float _Global_Tiling, float2 _Texture_Speed, float _UV_Refresh_Speed, float2 _Slope_Influence, float _Time_Float, Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float IN, out float2 UV_1_7, out float2 UV_1_LOD_5, out float2 UV_2_6, out float2 UV_2_LOD_4, out float FlowLerp_9)
        {
        float _Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean = _UV_Direction_V_T_U_F;
        float2 _Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2 = _Texture_Speed;
        float _Split_5a779872e58e4682b33358f5e2850697_R_1_Float = IN.WorldSpaceNormal[0];
        float _Split_5a779872e58e4682b33358f5e2850697_G_2_Float = IN.WorldSpaceNormal[1];
        float _Split_5a779872e58e4682b33358f5e2850697_B_3_Float = IN.WorldSpaceNormal[2];
        float _Split_5a779872e58e4682b33358f5e2850697_A_4_Float = 0;
        float _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float;
        Unity_Absolute_float(_Split_5a779872e58e4682b33358f5e2850697_G_2_Float, _Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float);
        float _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float;
        Unity_Clamp_float(_Absolute_fb845f894d534654b9d873d439ec97e8_Out_1_Float, 0, 1, _Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float);
        float _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float;
        Unity_OneMinus_float(_Clamp_7cf11436c7f14a38a02294151824c461_Out_3_Float, _OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float);
        float2 _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2 = _Slope_Influence;
        float2 _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2;
        Unity_Multiply_float2_float2((_OneMinus_2c8bc3c932cd4c2fa381d8f0385263c5_Out_1_Float.xx), _Property_ca2c3b79be894f69a445b9e5ca08c897_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2);
        float2 _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2;
        Unity_Add_float2(_Property_11e9ef21a6164714b54867b4fec442fb_Out_0_Vector2, _Multiply_bcb4a687c3be4bcc81009fedabf30aee_Out_2_Vector2, _Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2);
        float2 _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2 = _Texture_Tiling;
        float2 _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Add_e6afa2f8f51c4dcead01814bb6c8be1b_Out_2_Vector2, _Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, _Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2);
        float4 _UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4 = IN.uv3;
        float2 _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Multiply_178f533a8aa14edd86fdc13aab7f368f_Out_2_Vector2, (_UV_5065e53f57da48938d389be8b756e79f_Out_0_Vector4.xy), _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2);
        float _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[0];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float = _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2[1];
        float _Split_8a205a4b761446f9bd6e51fef55cd516_B_3_Float = 0;
        float _Split_8a205a4b761446f9bd6e51fef55cd516_A_4_Float = 0;
        float2 _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2 = float2(_Split_8a205a4b761446f9bd6e51fef55cd516_G_2_Float, _Split_8a205a4b761446f9bd6e51fef55cd516_R_1_Float);
        float2 _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2;
        Unity_Branch_float2(_Property_e1ff2b453fec41069201c9a23f45243f_Out_0_Boolean, _Multiply_bdd27f842d234a81ba8b7172a33e6380_Out_2_Vector2, _Vector2_cb21a19d7e194556a74f5b68f08a4752_Out_0_Vector2, _Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2);
        float _Property_85997eba6114477b8cf506155f6b748c_Out_0_Float = _Time_Float;
        float _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float = _UV_Refresh_Speed;
        float _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float;
        Unity_Multiply_float_float(_Property_85997eba6114477b8cf506155f6b748c_Out_0_Float, _Property_eca1185428d546de9034f062796c7f3b_Out_0_Float, _Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float);
        float _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, 0, _Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float);
        float _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float;
        Unity_Fraction_float(_Add_1cec3ae448bb41a994d49ff9058f65ad_Out_2_Float, _Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float);
        float2 _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float.xx), _Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2);
        float _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float = _Global_Tiling;
        float _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float;
        Unity_Divide_float(1, _Property_62f67c70aae5489e94e37cafe73baf35_Out_0_Float, _Divide_19c9049f60754d499008ce4b06109655_Out_2_Float);
        float4 _UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4 = IN.uv0;
        float2 _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Property_4d24cadf92ee4d43b52d3755629e269e_Out_0_Vector2, (_UV_6b1eec7607104319aba3d875527da073_Out_0_Vector4.xy), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2);
        float2 _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2;
        Unity_Multiply_float2_float2((_Divide_19c9049f60754d499008ce4b06109655_Out_2_Float.xx), _Multiply_6d5d3bb369ff4cbc9431867e65d745ed_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2);
        float2 _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2);
        float2 _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        Unity_Add_float2(_Multiply_d643813e071c4c11ad9c82da0fa55c07_Out_2_Vector2, _Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2);
        float _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float;
        Unity_Add_float(_Multiply_580500ede0084a0da29ab0bc78a40704_Out_2_Float, -0.5, _Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float);
        float _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float;
        Unity_Fraction_float(_Add_9eadb94808de4bc885bc1be18df4f639_Out_2_Float, _Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float);
        float2 _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2;
        Unity_Multiply_float2_float2(_Branch_c4a9eea287d54246b06bfb3d38305dba_Out_3_Vector2, (_Fraction_38e5506afa51447283ddde13593ada4d_Out_1_Float.xx), _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2);
        float2 _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2);
        float2 _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        Unity_Add_float2(_Multiply_0780558b0b8e4e77b4bce41a70002369_Out_2_Vector2, _Multiply_14c20d62ad084293accedac425b831fe_Out_2_Vector2, _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2);
        float _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float;
        Unity_Multiply_float_float(_Fraction_32b193bd71ca404588517d6887bbf390_Out_1_Float, 1, _Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float);
        float Constant_9550753bbc114dd4994f4e99790a3669 = 3.141593;
        float _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float;
        Unity_Multiply_float_float(_Multiply_f0632a2d61c04969b60c30ab67f87788_Out_2_Float, Constant_9550753bbc114dd4994f4e99790a3669, _Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float);
        float Constant_b538a449c4eb42328f031521a22bd3e3 = 3.141593;
        float _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float;
        Unity_Multiply_float_float(Constant_b538a449c4eb42328f031521a22bd3e3, 1.5, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float);
        float _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float;
        Unity_Add_float(_Multiply_c4390f9bbb504e9981494940812a3c59_Out_2_Float, _Multiply_97b5c7b454af4a4498283c5e382007be_Out_2_Float, _Add_590bbae990404254a6309a5fa210ca31_Out_2_Float);
        float _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float;
        Unity_Sine_float(_Add_590bbae990404254a6309a5fa210ca31_Out_2_Float, _Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float);
        float _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float;
        Unity_Absolute_float(_Sine_302cad9dc66b4df9ab2274f2ad8030f5_Out_1_Float, _Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float);
        float _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        Unity_Clamp_float(_Absolute_e8ff2c8476b2450082ca37ae1e24c8cf_Out_1_Float, 0, 1, _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float);
        UV_1_7 = _Add_1eb91db7e08b47ee90597a337cc5d191_Out_2_Vector2;
        UV_1_LOD_5 = _Add_533b0d63c41a4c3eb2141ee38f444ef4_Out_2_Vector2;
        UV_2_6 = _Add_5c0ae8613ecf4087a31c5dbc8e85f140_Out_2_Vector2;
        UV_2_LOD_4 = _Add_5373f3ceb31249868a4f178de8a7ccc5_Out_2_Vector2;
        FlowLerp_9 = _Clamp_f1cd701de6c24159b12ef481cc5316f2_Out_3_Float;
        }
        
        void Unity_NormalStrength_float(float3 In, float Strength, out float3 Out)
        {
            Out = float3(In.rg * Strength, lerp(1, In.b, saturate(Strength)));
        }
        
        void Unity_Normalize_float3(float3 In, out float3 Out)
        {
            Out = normalize(In);
        }
        
        void Unity_DotProduct_float3(float3 A, float3 B, out float Out)
        {
            Out = dot(A, B);
        }
        
        void Unity_Add_float4(float4 A, float4 B, out float4 Out)
        {
            Out = A + B;
        }
        
        void Unity_Clamp_float4(float4 In, float4 Min, float4 Max, out float4 Out)
        {
            Out = clamp(In, Min, Max);
        }
        
            // Graph Vertex
            // GraphVertex: <None>
        
            // Graph Pixel
            struct SurfaceDescription
        {
            float3 BaseColor;
            float3 Emission;
            float Alpha;
            float3 BentNormal;
            float Smoothness;
            float Occlusion;
            float3 NormalTS;
            float Metallic;
        };
        
        SurfaceDescription SurfaceDescriptionFunction(SurfaceDescriptionInputs IN)
        {
            SurfaceDescription surface = (SurfaceDescription)0;
            UnityTexture2D _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaAlbedo_SM);
            float _Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2 = _ColdLavaTiling;
            float _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float = _GlobalTiling;
            float2 _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2 = _ColdLavaMainSpeed;
            UnityTexture2D _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float = _ColdLavaFlowUVRefresSpeed;
            float2 _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv0 = IN.uv0;
            _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float;
            float _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_9888f536495c078d8d13e4f93f260994_Out_0_Boolean, _Property_398a18f78c81d28393067eae86b7f0c3_Out_0_Vector2, _Property_c92d9ef7ab07168d94ca1468d5742541_Out_0_Float, _Property_877d7e28976d8f85bbc8ab7a485949eb_Out_0_Vector2, _Property_431fc4b7bdb08186aa2ebdcdd9ddd27f_Out_0_Texture2D, _Property_41fea7dea3f9c78fbf154c14e561037a_Out_0_Float, _Property_347a6b6c52d14a85a386b3a5ffffdc85_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction1_1_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_Fraction2_2_Float);
            float4 _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_R_4_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.r;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_G_5_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.g;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_B_6_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.b;
            float _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_A_7_Float = _SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_b7dfcca6c5206288b31b8e82b4e2e7c5_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_R_4_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.r;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_G_5_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.g;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_B_6_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.b;
            float _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_A_7_Float = _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4.a;
            float4 _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_689ba69e2ff7bd888eeaec5d40bddbf7_RGBA_0_Vector4, _SampleTexture2D_a5d6d50c4eb30382b6dbb4e680e74adb_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4);
            float4 _Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4 = _ColdLavaAlbedoColor;
            float _Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float = _ColdLavaAlbedoColorMultiply;
            float4 _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_81ee9e99fc7a068889b6ba7bdcb202a7_Out_0_Vector4, (_Property_ae430ed70f674188b5e8b6cf5ec101a9_Out_0_Float.xxxx), _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4);
            float4 _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4, _Multiply_04c020203bf21887b1adae9c4cc6574a_Out_2_Vector4, _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4);
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[0];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[1];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[2];
            float _Split_5d0c2ad1f86f8d8e8438ed908f41a258_A_4_Float = _Multiply_76086b1955ddc78db0d1105cb61c546f_Out_2_Vector4[3];
            float _Split_336849396de78d88909e4ad054a44d6c_R_1_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[0];
            float _Split_336849396de78d88909e4ad054a44d6c_G_2_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[1];
            float _Split_336849396de78d88909e4ad054a44d6c_B_3_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[2];
            float _Split_336849396de78d88909e4ad054a44d6c_A_4_Float = _Lerp_aab81b541d9d3b8280e5e9a669be7666_Out_3_Vector4[3];
            float _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float = _ColdLavaSmoothness;
            float _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float;
            Unity_Multiply_float_float(_Split_336849396de78d88909e4ad054a44d6c_A_4_Float, _Property_23e147d5684b0c89a7767d3573b12dbd_Out_0_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float);
            float4 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4;
            float3 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3;
            float2 _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2;
            Unity_Combine_float(_Split_5d0c2ad1f86f8d8e8438ed908f41a258_R_1_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_G_2_Float, _Split_5d0c2ad1f86f8d8e8438ed908f41a258_B_3_Float, _Multiply_3d6654a0a154e088b1b7671fab414640_Out_2_Float, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGB_5_Vector3, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RG_6_Vector2);
            UnityTexture2D _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaAlbedo_SM);
            float _Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2 = _MediumLavaTiling;
            float _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float = _GlobalTiling;
            float2 _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2 = _MediumLavaMainSpeed;
            UnityTexture2D _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float = _MediumLavaFlowUVRefreshSpeed;
            float2 _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv0 = IN.uv0;
            _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float;
            float _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_ac1c529019c9d1869d9bfe9bf1104042_Out_0_Boolean, _Property_4a73de4bbed00585a919d64e1b181601_Out_0_Vector2, _Property_4122249ff176f58da9d0dbace2f883d0_Out_0_Float, _Property_8774276f674d8a8598020af3d4e74f0f_Out_0_Vector2, _Property_f1ff1048a1584d1c9247f36b1f2706ce_Out_0_Texture2D, _Property_a13ee271968db284868bea327ce6cf48_Out_0_Float, _Property_2b353826c2c04c32be043f84b9bc8b18_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction1_1_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_Fraction2_2_Float);
            float4 _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_R_4_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.r;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_G_5_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.g;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_B_6_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.b;
            float _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_A_7_Float = _SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_416b2573e211708fb7af409507174e09_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_R_4_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.r;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_G_5_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.g;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_B_6_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.b;
            float _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_A_7_Float = _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4.a;
            float4 _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_81669c6dd85bd2879473510bc4f9109e_RGBA_0_Vector4, _SampleTexture2D_4a602e59b5c2cd82b26c6532c5dec4bb_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4);
            float4 _Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4 = _MediumLavaAlbedoColor;
            float _Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float = _MediumLavaAlbedoColorMultiply;
            float4 _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_a9e1aded62977f8ca3f9c46207eadfe8_Out_0_Vector4, (_Property_1761dd4732c7b3858814a0c4bc252900_Out_0_Float.xxxx), _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4);
            float4 _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4, _Multiply_c98351861904f487ac8fc5401441358e_Out_2_Vector4, _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4);
            float _Split_c431e838bb4f458084245282a6fc6137_R_1_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[0];
            float _Split_c431e838bb4f458084245282a6fc6137_G_2_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[1];
            float _Split_c431e838bb4f458084245282a6fc6137_B_3_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[2];
            float _Split_c431e838bb4f458084245282a6fc6137_A_4_Float = _Multiply_16971dced2f6f384b7d2d65006f03b46_Out_2_Vector4[3];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_R_1_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[0];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_G_2_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[1];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_B_3_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[2];
            float _Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float = _Lerp_93c5f711ce1b4114bd9314cb369a8533_Out_3_Vector4[3];
            float _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float = _MediumLavaSmoothness;
            float _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float;
            Unity_Multiply_float_float(_Split_77f8ec7707a1888f8f5bb2f3ee9ef36e_A_4_Float, _Property_19729c3fad203984b63630ce8edabf9d_Out_0_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float);
            float4 _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4;
            float3 _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3;
            float2 _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2;
            Unity_Combine_float(_Split_c431e838bb4f458084245282a6fc6137_R_1_Float, _Split_c431e838bb4f458084245282a6fc6137_G_2_Float, _Split_c431e838bb4f458084245282a6fc6137_B_3_Float, _Multiply_25537a09620d8e84a159350d0570e3b8_Out_2_Float, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGB_5_Vector3, _Combine_8579144aa55f898b914c649ff6fd204b_RG_6_Vector2);
            UnityTexture2D _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaMT_AO_H_EM);
            float4 _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_R_4_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.r;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_G_5_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.g;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_B_6_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.b;
            float _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float = _SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0bc00b50144a4fbb90619f66bbadc7c7_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_R_4_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.r;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_G_5_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.g;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_B_6_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.b;
            float _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float = _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4.a;
            float4 _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_RGBA_0_Vector4, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_RGBA_0_Vector4, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxxx), _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4);
            float _Split_94cd24e718391e889d186d14735a5f81_R_1_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[0];
            float _Split_94cd24e718391e889d186d14735a5f81_G_2_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[1];
            float _Split_94cd24e718391e889d186d14735a5f81_B_3_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[2];
            float _Split_94cd24e718391e889d186d14735a5f81_A_4_Float = _Lerp_73c98c320ef744838327c8caa26d91fb_Out_3_Vector4[3];
            float _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float;
            Unity_OneMinus_float(_Split_94cd24e718391e889d186d14735a5f81_B_3_Float, _OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float);
            float _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float;
            Unity_Absolute_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float);
            float _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float = _MediumLavaHeightBlendTreshold;
            float _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float;
            Unity_Power_float(_Absolute_d8f0ae13edc2475da28ea6d59246df0f_Out_1_Float, _Property_b4d8b44b98ac218ab5b64e9509780c1f_Out_0_Float, _Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float);
            float _Split_e8815c5687c0c188b222e57b486e0e5d_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_e8815c5687c0c188b222e57b486e0e5d_A_4_Float = 0;
            float _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float;
            Unity_Absolute_float(_Split_e8815c5687c0c188b222e57b486e0e5d_G_2_Float, _Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float);
            float _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float;
            Unity_Clamp_float(_Absolute_af2e8d067a75a385bc8da51b27457800_Out_1_Float, 0, 1, _Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float);
            float _Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float = _MediumLavaAngle;
            float _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float;
            Unity_Divide_float(_Property_f6e7c7b7064d56849dcc327504a5af65_Out_0_Float, 45, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float);
            float _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float;
            Unity_OneMinus_float(_Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float);
            float _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float;
            Unity_Subtract_float(_Clamp_6461e1158ec9fc888d6226acfef2903e_Out_3_Float, _OneMinus_51d362fe4abf8088a515cede6efdeae6_Out_1_Float, _Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float);
            float _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float;
            Unity_Clamp_float(_Subtract_df7e03fdbee60f829e8414ab56aebd63_Out_2_Float, 0, 2, _Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float);
            float _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float;
            Unity_Divide_float(1, _Divide_9e59ae67ac09cc85ac256679eb8a92df_Out_2_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float);
            float _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_93c899dfdaf23a869025d2fe37cbc17b_Out_3_Float, _Divide_99e399b80aa3d78c9b8289ae31f1e13c_Out_2_Float, _Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float);
            float _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float;
            Unity_Clamp_float(_Multiply_7079e8acdf5057888843275dbbdb199c_Out_2_Float, 0, 1, _Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float);
            float _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float;
            Unity_OneMinus_float(_Clamp_6b3d8b850a8e5188b8a540162210198d_Out_3_Float, _OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float);
            float _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float;
            Unity_Absolute_float(_OneMinus_464327f0009fbb8fa990d2cb702b2da9_Out_1_Float, _Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float);
            float _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float = _MediumLavaAngleFalloff;
            float _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float;
            Unity_Power_float(_Absolute_7b20625d60e2458b89c9ca794a5039a5_Out_1_Float, _Property_f6203e15e471e481b8369ee14c1cf745_Out_0_Float, _Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float);
            float _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float;
            Unity_Clamp_float(_Power_1bc1b18487206481a5ce3274075c24a1_Out_2_Float, 0, 1, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float);
            float _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float = _MediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b;
            float _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_8ccb8ba2dc154d8f8d23bb151fc3f936_Out_2_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Property_ebcd48be1c3af28cb628925671461e5e_Out_0_Float, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b, _HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float);
            float4 _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4;
            Unity_Lerp_float4(_Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxxx), _Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4);
            UnityTexture2D _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaAlbedo_SM);
            float _Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2 = _HotLavaTiling;
            float _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float = _GlobalTiling;
            float2 _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2 = _HotLavaMainSpeed;
            UnityTexture2D _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float = _HotLavaFlowUVRefreshSpeed;
            float2 _Property_0530099e15864039acc078623bacb697_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv0 = IN.uv0;
            _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd.uv3 = IN.uv3;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2;
            float2 _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float;
            float _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float;
            SG_FlowmapUVHeighblend_f42f278eb84075841b72e9652bd0ba25_float(_Property_11b5e32bb1a6404c96d9c096533c2bbd_Out_0_Boolean, _Property_5db8dc9196e94d72bcadc2a80e298677_Out_0_Vector2, _Property_1214e3d6f36c40cb9d0d4ac4f40e7df3_Out_0_Float, _Property_1d9925ecc19284849bb9705ef6f8c824_Out_0_Vector2, _Property_792c0bac9b054fd89ddecac232cfc211_Out_0_Texture2D, _Property_a29d4264dadc878687c59348530e0cb7_Out_0_Float, _Property_0530099e15864039acc078623bacb697_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction1_1_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_Fraction2_2_Float);
            float4 _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_R_4_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.r;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_G_5_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.g;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_B_6_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.b;
            float _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_A_7_Float = _SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_0be3b3e72a830881bf032d5b81dee190_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_R_4_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.r;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_G_5_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.g;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_B_6_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.b;
            float _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_A_7_Float = _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4.a;
            float4 _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_8d83fa40657c878a8b6151bfdeeecc4e_RGBA_0_Vector4, _SampleTexture2D_d57511f844f62d8e8e5df4262ed4e29c_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4);
            float4 _Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4 = _HotLavaAlbedoColor;
            float _Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float = _HotLavaAlbedoColorMultiply;
            float4 _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_f426055a212d488b92e0721ad75eea0d_Out_0_Vector4, (_Property_bc8ee8b7cbd16f83aa2d51aada2d0a51_Out_0_Float.xxxx), _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4);
            float4 _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4, _Multiply_61a826a1dba47d8dbb0510fc1fd2dee2_Out_2_Vector4, _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4);
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[0];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[1];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[2];
            float _Split_2a6cfd0eedbc128d83eff83d5df85b09_A_4_Float = _Multiply_f73b703611c2ee8ea1b712546ec1fdc8_Out_2_Vector4[3];
            float _Split_87213490114de18bbc7496f97751b00a_R_1_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[0];
            float _Split_87213490114de18bbc7496f97751b00a_G_2_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[1];
            float _Split_87213490114de18bbc7496f97751b00a_B_3_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[2];
            float _Split_87213490114de18bbc7496f97751b00a_A_4_Float = _Lerp_4502c166e04e41eeb867c4d04a112e50_Out_3_Vector4[3];
            float _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float = _HotLavaSmoothness;
            float _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float;
            Unity_Multiply_float_float(_Split_87213490114de18bbc7496f97751b00a_A_4_Float, _Property_94efdcfe3a5a998bb3b399b34d6110a5_Out_0_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float);
            float4 _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4;
            float3 _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3;
            float2 _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2;
            Unity_Combine_float(_Split_2a6cfd0eedbc128d83eff83d5df85b09_R_1_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_G_2_Float, _Split_2a6cfd0eedbc128d83eff83d5df85b09_B_3_Float, _Multiply_1e7303fa97e339859abc539fdacc406f_Out_2_Float, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGB_5_Vector3, _Combine_1bd6341933599685bd9dfbd647433b28_RG_6_Vector2);
            UnityTexture2D _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaMT_AO_H_EM);
            float4 _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_R_4_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.r;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_G_5_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.g;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_B_6_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.b;
            float _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float = _SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_7c78a41ed5fb06878baa4f230eb6da66_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_R_4_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.r;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_G_5_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.g;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_B_6_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.b;
            float _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float = _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4.a;
            float4 _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_RGBA_0_Vector4, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_RGBA_0_Vector4, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxxx), _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4);
            float _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[0];
            float _Split_503d896cedc1148aa1567e911ed3614b_G_2_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[1];
            float _Split_503d896cedc1148aa1567e911ed3614b_B_3_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[2];
            float _Split_503d896cedc1148aa1567e911ed3614b_A_4_Float = _Lerp_d9190fa5aad64387a59eae8b234267b1_Out_3_Vector4[3];
            float _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float;
            Unity_OneMinus_float(_Split_503d896cedc1148aa1567e911ed3614b_B_3_Float, _OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float);
            float _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float;
            Unity_Absolute_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float);
            float _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float = _HotLavaHeightBlendTreshold;
            float _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float;
            Unity_Power_float(_Absolute_586ec5b572374b96aaffcbc5f9bbb364_Out_1_Float, _Property_54766320db4a7f848cb65321bce3a68e_Out_0_Float, _Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float);
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_R_1_Float = IN.WorldSpaceNormal[0];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float = IN.WorldSpaceNormal[1];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_B_3_Float = IN.WorldSpaceNormal[2];
            float _Split_b9e7b4a6b4b5e58aa502d4b6d169b792_A_4_Float = 0;
            float _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float;
            Unity_Absolute_float(_Split_b9e7b4a6b4b5e58aa502d4b6d169b792_G_2_Float, _Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float);
            float _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float;
            Unity_Clamp_float(_Absolute_45576b7b972f7d8a82c937564b72f70b_Out_1_Float, 0, 1, _Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float);
            float _Property_6975119070a7eb84950e7da691463776_Out_0_Float = _HotLavaAngle;
            float _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float;
            Unity_Divide_float(_Property_6975119070a7eb84950e7da691463776_Out_0_Float, 45, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float);
            float _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float;
            Unity_OneMinus_float(_Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float);
            float _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float;
            Unity_Subtract_float(_Clamp_c2714660b22e6a86a3d1f402132434f1_Out_3_Float, _OneMinus_a7c4799546af71898266d38a4354b568_Out_1_Float, _Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float);
            float _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float;
            Unity_Clamp_float(_Subtract_e487cff09d7e158e8f03eeef153fbe43_Out_2_Float, 0, 2, _Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float);
            float _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float;
            Unity_Divide_float(1, _Divide_86811ef0d01a1581b082fc982daa687c_Out_2_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float);
            float _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_001f24015dba2889ab4be2cbfefbc81f_Out_3_Float, _Divide_d1e47cd61e61c487be74fb1989b0bbb8_Out_2_Float, _Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float);
            float _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float;
            Unity_Clamp_float(_Multiply_a6dece8284b0dd89b3ad78540f989a2b_Out_2_Float, 0, 1, _Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float);
            float _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float;
            Unity_OneMinus_float(_Clamp_69414a1448338e8d9fc890185b317bc6_Out_3_Float, _OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float);
            float _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_b3ab3b092be02a8dbebaa86bf00ea51d_Out_1_Float, _Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float);
            float _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float = _HotLavaAngleFalloff;
            float _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float;
            Unity_Power_float(_Absolute_6cd65b456694da879b288dd44c7c10c6_Out_1_Float, _Property_f5a63fda0810468082350dfa23ec6bf3_Out_0_Float, _Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float);
            float _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float;
            Unity_Clamp_float(_Power_0c67a131ce19048caeed8c043e033fb9_Out_2_Float, 0, 1, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float);
            float _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float = _HotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718;
            float _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_Power_ca351c1cbba04987a097e6ea5a87eeb8_Out_2_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Property_598298ccdedaea81a6c7006cdf26d0b3_Out_0_Float, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718, _HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float);
            float4 _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_60e101ecb3d9ae8a8c8208e24fcdc145_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxxx), _Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4);
            float _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float = IN.VertexColor[0];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float = IN.VertexColor[1];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float = IN.VertexColor[2];
            float _Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float = IN.VertexColor[3];
            float _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float = _VCColdLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a;
            float _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_d30fd2a07aa5ef8c954841430c669c6f_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_R_1_Float, _Property_f10c17c1521403868848dbcecb8a6017_Out_0_Float, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a, _HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float);
            float4 _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_a4738e050e0d2685b5f9698d1e2bb098_Out_3_Vector4, _Combine_0a9a9298a9464d899f2f2fafc625fec8_RGBA_4_Vector4, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxxx), _Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4);
            float _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float = _VCMediumLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6;
            float _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_8cea3f85f066ff8fbbd54f2eff89ae58_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_G_2_Float, _Property_7b8b9775155e3b82b9b587b2df24f45d_Out_0_Float, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6, _HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float);
            float4 _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_644cfd81f60c058bbc1dfa84ca7c26a5_Out_3_Vector4, _Combine_8579144aa55f898b914c649ff6fd204b_RGBA_4_Vector4, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxxx), _Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4);
            UnityTexture2D _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaMT_AO_H_EM);
            float4 _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_R_4_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.r;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_G_5_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.g;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_B_6_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.b;
            float _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float = _SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_aa20896d4ee14a21ae5c01b2530647ab_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_R_4_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.r;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_G_5_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.g;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_B_6_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.b;
            float _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float = _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4.a;
            float4 _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4;
            Unity_Lerp_float4(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_RGBA_0_Vector4, _SampleTexture2D_03c935556def188b9bc5100587e1286e_RGBA_0_Vector4, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxxx), _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4);
            float _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[0];
            float _Split_94d707688f4dff88abea8f5931660ff1_G_2_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[1];
            float _Split_94d707688f4dff88abea8f5931660ff1_B_3_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[2];
            float _Split_94d707688f4dff88abea8f5931660ff1_A_4_Float = _Lerp_79f8c8161fb394818f7c8937b1054b53_Out_3_Vector4[3];
            float _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float;
            Unity_OneMinus_float(_Split_94d707688f4dff88abea8f5931660ff1_B_3_Float, _OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float);
            float _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float = _VCHotLavaHeightBlendStrenght;
            Bindings_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0;
            float _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float;
            SG_HeightBlendSplat_e80db2c21dcba0342900d4e58bcd040c_float(_OneMinus_2b6b9b1cf9b54e80b331120fb69183b3_Out_1_Float, _Split_992c0de0de817484b2d52aeb19e22ee0_B_3_Float, _Property_518db0a2d263d48790462785dc3d9758_Out_0_Float, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0, _HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float);
            float4 _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4;
            Unity_Lerp_float4(_Lerp_f1658301ae29508f8307c28d233736c6_Out_3_Vector4, _Combine_1bd6341933599685bd9dfbd647433b28_RGBA_4_Vector4, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxxx), _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4);
            float _Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean = _Dynamic_Flow;
            float _Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float = _ColdLavaMetalic;
            float _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float;
            Unity_Multiply_float_float(_Property_0dcc58d7fae4a88ba2336bd311b40f19_Out_0_Float, _Split_94cd24e718391e889d186d14735a5f81_R_1_Float, _Multiply_086367572588138ebc1240441f2f400d_Out_2_Float);
            float _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float = _ColdLavaAO;
            float _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float;
            Unity_Subtract_float(1, _Property_13629a8ac7e261869193e0848c215a76_Out_0_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float);
            float _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float;
            Unity_Clamp_float(_Split_94cd24e718391e889d186d14735a5f81_G_2_Float, _Subtract_dc12c0f384708b8fa4a87f78882cf2c9_Out_2_Float, 1, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float);
            float _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_f6eb47aeeabe878b991235bf880d85a1_A_7_Float, _SampleTexture2D_e2844d016376b18d88bde96b6ed83eb0_A_7_Float, _FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowNonHeigblendedLerp_9_Float, _Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float);
            float _Property_d965da3019019f838869a1fb407d698d_Out_0_Float = _ColdLavaEmissionMaskIntensivity;
            float _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_60114071ddee158f9af9b873a6d840d1_Out_3_Float, _Property_d965da3019019f838869a1fb407d698d_Out_0_Float, _Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float);
            float _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float;
            Unity_Absolute_float(_Multiply_6b1473d0f44e4e82bcf34936acd1a95a_Out_2_Float, _Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float);
            float _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float = _ColdLavaEmissionMaskTreshold;
            float _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float;
            Unity_Power_float(_Absolute_c53321c5bc0f868d9de81835ef6f4088_Out_1_Float, _Property_0b9196e386b4ae85a838a11d69d1f2de_Out_0_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float);
            float4 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4;
            float3 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3;
            float2 _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2;
            Unity_Combine_float(_Multiply_086367572588138ebc1240441f2f400d_Out_2_Float, _Clamp_1410b9818aefd882b5441fa87950e0a6_Out_3_Float, _Power_861f8c527ae8548caad9f4bf5fc72029_Out_2_Float, 0, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGBA_4_Vector4, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RG_6_Vector2);
            float _Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float = _MediumLavaMetallic;
            float _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float;
            Unity_Multiply_float_float(_Property_d5d35ee97dd2fd8185146b2cbd679bcd_Out_0_Float, _Split_503d896cedc1148aa1567e911ed3614b_R_1_Float, _Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float);
            float _Property_71564d60d870518cbf142ff71794419d_Out_0_Float = _MediumLavaAO;
            float _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float;
            Unity_Subtract_float(1, _Property_71564d60d870518cbf142ff71794419d_Out_0_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float);
            float _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float;
            Unity_Clamp_float(_Split_503d896cedc1148aa1567e911ed3614b_G_2_Float, _Subtract_1744923d096e8885aea6bc6cc552f975_Out_2_Float, 1, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float);
            float _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_78273dcdf5689f80952c2a7be9451994_A_7_Float, _SampleTexture2D_19b94184e9c8e288b96bc669f7cbed52_A_7_Float, _FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowNonHeigblendedLerp_9_Float, _Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float);
            float _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float = _MediumLavaEmissionMaskIntesivity;
            float _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_86d79a5fd121e78398e4ef45afdd6f37_Out_3_Float, _Property_459a51ffc4728c8ca2926024707897c6_Out_0_Float, _Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float);
            float _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float;
            Unity_Absolute_float(_Multiply_0fa7b2efab7b5a8e881668d02edd0564_Out_2_Float, _Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float);
            float _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float = _MediumLavaEmissionMaskTreshold;
            float _Power_899ae999721ad384b72c681599af42de_Out_2_Float;
            Unity_Power_float(_Absolute_6e05a38014175a829a84304e3f621745_Out_1_Float, _Property_493c2ccb3a27c580ab437efe58937c35_Out_0_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float);
            float4 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4;
            float3 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3;
            float2 _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2;
            Unity_Combine_float(_Multiply_75ae743d3359148487052919f04e48b2_Out_2_Float, _Clamp_05e5ffdd0a816887833802741aa74f0a_Out_3_Float, _Power_899ae999721ad384b72c681599af42de_Out_2_Float, 0, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGBA_4_Vector4, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RG_6_Vector2);
            float3 _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3;
            Unity_Lerp_float3(_Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3);
            float _Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float = _HotLavaMetallic;
            float _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float;
            Unity_Multiply_float_float(_Property_bd7e990dab5d208d8620b5e1f44874a7_Out_0_Float, _Split_94d707688f4dff88abea8f5931660ff1_R_1_Float, _Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float);
            float _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float = _HotLavaAO;
            float _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float;
            Unity_Subtract_float(1, _Property_e283a823a4aece82b7b75b005a98c0e4_Out_0_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float);
            float _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float;
            Unity_Clamp_float(_Split_94d707688f4dff88abea8f5931660ff1_G_2_Float, _Subtract_1b951849f3879a89ba4754f096b27f78_Out_2_Float, 1, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float);
            float _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_77e57223e0c2a685b9a9a05b971858ae_A_7_Float, _SampleTexture2D_03c935556def188b9bc5100587e1286e_A_7_Float, _FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowNonHeigblendedLerp_9_Float, _Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float);
            float _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float = _HotLavaEmissionMaskIntensivity;
            float _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float;
            Unity_Multiply_float_float(_Lerp_496c3cb184f74e81b99eb5acea16b6a0_Out_3_Float, _Property_515e46f8e19c928393b13e9f9cbdb04e_Out_0_Float, _Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float);
            float _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float;
            Unity_Absolute_float(_Multiply_4a03b8b1ae505d86a988822af9ecfb45_Out_2_Float, _Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float);
            float _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float = _HotLavaEmissionMaskTreshold;
            float _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float;
            Unity_Power_float(_Absolute_d1d0ea347a23fb81a2c31ad237e5a357_Out_1_Float, _Property_f496c3d8b9533f84a76c0fde29dfef08_Out_0_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float);
            float4 _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4;
            float3 _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3;
            float2 _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2;
            Unity_Combine_float(_Multiply_8c23c6f15dbc0b89b63b439186a74461_Out_2_Float, _Clamp_d08049eeee098087ab9597b4ca5669b9_Out_3_Float, _Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 0, _Combine_a55e0256baa5a682b416f12d9adff678_RGBA_4_Vector4, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RG_6_Vector2);
            float3 _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_8ab58e5131383f8baeb4b7abe9b54719_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3);
            float3 _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_407a4e984788d48e9dd385caf96f3e6d_Out_3_Vector3, _Combine_c59b12698cf8ec8f89598ca72a0c2ba3_RGB_5_Vector3, float3(0, 0, 0), _Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3);
            float3 _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_66ccf8c2f5a1198fb09f73c45cf9014a_Out_3_Vector3, _Combine_e8537fccc132f988b4e66b7fbcb0054a_RGB_5_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3);
            float3 _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_6bdd98ef61a79f8393b14396ffcb6f1e_Out_3_Vector3, _Combine_a55e0256baa5a682b416f12d9adff678_RGB_5_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3);
            float _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[0];
            float _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[1];
            float _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float = _Lerp_a978488a3f10ee869e5dc7653cfd6739_Out_3_Vector3[2];
            float _Split_be0161af2d147e82901bbdfc190c174f_A_4_Float = 0;
            float _Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float = _Dynamic_Shape_Y_Offset;
            float _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float = _Dynamic_Shape_V_Curve_Power;
            float _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float = _Dynamic_Shape_U_Curve_Power;
            float _Property_94a7abd0eed040958756408f5586399b_Out_0_Float = _Dynamic_Start_Position_Offset;
            float _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float = _Dynamic_Shape_Speed;
            Bindings_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float _LavaMove_aff8d85a024b46648ad0918900a6bcc3;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.uv2 = IN.uv2;
            _LavaMove_aff8d85a024b46648ad0918900a6bcc3.TimeParameters = IN.TimeParameters;
            float3 _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float;
            float _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float;
            SG_LavaMove_9532a0dbb7f8e2f43a8d5a77a1ea702e_float(_Property_6174b362fef84a64bfc63218c98ca2ad_Out_0_Float, _Property_5a32e2c3b8ea4693bbcb6465db16e4eb_Out_0_Float, _Property_c1acd6c11c59428c9aa108b90c725006_Out_0_Float, _Property_94a7abd0eed040958756408f5586399b_Out_0_Float, _Property_7430d51dddb6413fa811cec211b99000_Out_0_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_OutVector3_1_Vector3, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float);
            float _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float;
            Unity_Clamp_float(_LavaMove_aff8d85a024b46648ad0918900a6bcc3_Mask_2_Float, 0, 1, _Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float);
            float _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Intensivity;
            float _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_5a4c72163e04432f95b155be49fa65e9_Out_3_Float, _Property_4c0d13aa12634fd991f24b0f325c7b96_Out_0_Float, _Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float);
            float _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float;
            Unity_Absolute_float(_Multiply_28b4adb7aaf04c9195b5b4bfc0696be0_Out_2_Float, _Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float);
            float _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float = _Dynamic_Lava_Emission_Front_Mask_Treshold;
            float _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float;
            Unity_Power_float(_Absolute_8247a8f473ec40e4b993c5d9d8eec215_Out_1_Float, _Property_0f17d8dbae984b469332ad1cd4ba2704_Out_0_Float, _Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float);
            float _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float;
            Unity_Clamp_float(_Power_ada2f71309db45e98db8ecfc39a67475_Out_2_Float, 0, 1, _Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float);
            float _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float = _Dynamic_Lava_Emission_Intensivity;
            float _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float;
            Unity_Multiply_float_float(_Clamp_ae18344023ec439aba6690d8752a601a_Out_3_Float, _Property_c36b3e007a144a1699b94093c37f3ddf_Out_0_Float, _Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float);
            float _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float;
            Unity_Absolute_float(_Multiply_aebb3669356840589d585ecc1c070936_Out_2_Float, _Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float);
            float _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float = _Dynamic_Lava_Emission_Treshold;
            float _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float;
            Unity_Power_float(_Absolute_7d654fefd82d4de68aac5462c2d519ee_Out_1_Float, _Property_d87f8a22acd041228f3b494cd2b99c72_Out_0_Float, _Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float);
            float _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float;
            Unity_Multiply_float_float(_Power_0da5c5e9dde54fa7aa18901343a0cc7c_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float);
            float _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float;
            Unity_Multiply_float_float(_Power_0e477cda8e66268c882e8889cb195d72_Out_2_Float, 2, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float);
            float _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float;
            Unity_Clamp_float(_Multiply_1133d49abcdc4e8bb0504b3658453e93_Out_2_Float, 0, _Multiply_84f73767655743539da925247c31d2cf_Out_2_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float);
            float _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float;
            Unity_Maximum_float(_Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Clamp_5151e17155c941ba97e0614484fc6667_Out_3_Float, _Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float);
            float _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float;
            Unity_Multiply_float_float(_Maximum_9fa8398443a94f33b624e57ffd686c8b_Out_2_Float, _LavaMove_aff8d85a024b46648ad0918900a6bcc3_BlackMask_3_Float, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float);
            float _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float;
            Unity_Branch_float(_Property_661c7656745d4b468e5418922cad980c_Out_0_Boolean, _Multiply_e4a078b5b33849c6bab82661ad0ac653_Out_2_Float, _Split_be0161af2d147e82901bbdfc190c174f_B_3_Float, _Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float);
            float4 _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_LavaEmissionColor) : _LavaEmissionColor;
            float4 _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Property_b3443969e143738086170ebbcf185caa_Out_0_Vector4, _Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4);
            UnityTexture2D _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_Noise);
            float _Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean = _UVVDirection1UDirection0;
            float2 _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2 = _NoiseTiling;
            float _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float = _GlobalTiling;
            float2 _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2 = _NoiseSpeed;
            float _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float = _HotLavaFlowUVRefreshSpeed_1;
            float2 _Property_9e623369413a498080e7069264721da8_Out_0_Vector2 = _Slope_Speed_Influence;
            Bindings_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.WorldSpaceNormal = IN.WorldSpaceNormal;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv0 = IN.uv0;
            _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace.uv3 = IN.uv3;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2;
            float2 _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2;
            float _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float;
            SG_FlowmapUV_cffd0fe22226f8348a3466353fe6860a_float(_Property_4273893c41e28e8f83e15df255cfe5c4_Out_0_Boolean, _Property_cd0729367b406d8cacc6ccd0f976623f_Out_0_Vector2, _Property_f29cfb3a736d4e84af114cbf820ee141_Out_0_Float, _Property_1fbdca361af74f8791981d29932b1108_Out_0_Vector2, _Property_7d6408c4232b4484a4ae61ebdca6fefc_Out_0_Float, _Property_9e623369413a498080e7069264721da8_Out_0_Vector2, IN.TimeParameters.x, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1LOD_5_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2LOD_4_Vector2, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float);
            float4 _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV1_7_Vector2) );
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_R_4_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.r;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_G_5_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.g;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_B_6_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.b;
            float _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float = _SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_RGBA_0_Vector4.a;
            float4 _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.tex, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.samplerstate, _Property_b204f4dc0e3a57808a1b3d2afeac1751_Out_0_Texture2D.GetTransformedUV(_FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_UV2_6_Vector2) );
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_R_4_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.r;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_G_5_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.g;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_B_6_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.b;
            float _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float = _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_RGBA_0_Vector4.a;
            float _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float;
            Unity_Lerp_float(_SampleTexture2D_c5434a9c2ec579878f4cd8248e70b955_A_7_Float, _SampleTexture2D_44313f2c910f9f8f8a87c190445fdac0_A_7_Float, _FlowmapUV_c5c940701a3645319b4de4d05ecd4ace_FlowLerp_9_Float, _Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float);
            float _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float;
            Unity_Absolute_float(_Lerp_a61b31a158d25a80a7ed85f97cdf0e36_Out_3_Float, _Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float);
            float _Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float = _ColdLavaNoisePower;
            float _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float = _MediumLavaNoisePower;
            float _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float;
            Unity_Lerp_float(_Property_46ee64e6cca7cf819ebc27703d71fc3a_Out_0_Float, _Property_a3f785ba1025c483b9e4d05a939efcac_Out_0_Float, _Clamp_08c896054837bb88bc0374bd536ee024_Out_3_Float, _Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float);
            float _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float = _HotLavaNoisePower;
            float _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float;
            Unity_Lerp_float(_Lerp_e859fb8bea9a2b8d8e157dca75b8d969_Out_3_Float, _Property_8a756da4fda1058f80ca49df1937f450_Out_0_Float, _Clamp_c8349812bf696286b9429cd182d4670a_Out_3_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float);
            float _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float;
            Unity_Power_float(_Absolute_bbb7620451d39789a4abb5a43e40c6c1_Out_1_Float, _Lerp_3600ec4e14b0ec8e956abc53133f1250_Out_3_Float, _Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float);
            float _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float;
            Unity_Multiply_float_float(_Power_71ad5b7cab8b348ead45c623e2311de3_Out_2_Float, 20, _Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float);
            float _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float;
            Unity_Clamp_float(_Multiply_70fde6b67f141a8abf73a5edeab0e286_Out_2_Float, 0.05, 1.2, _Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float);
            float4 _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_139ff6c8e0a3fb8caa53be175ec38d28_Out_2_Vector4, (_Clamp_6e6f3fcbd3c1538a947629b6025b80bc_Out_3_Float.xxxx), _Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4);
            float4 _Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4 = IsGammaSpace() ? LinearToSRGB(_RimColor) : _RimColor;
            UnityTexture2D _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_ColdLavaNormal);
            float4 _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV1_7_Vector2) );
            _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4);
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_R_4_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.r;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_G_5_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.g;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_B_6_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.b;
            float _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_A_7_Float = _SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.a;
            float _Property_30c36922aabc618192374556ee8ce299_Out_0_Float = _ColdLavaNormalScale;
            float3 _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_2a19232462fd2d83a3dcaeb21503d1fd_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3);
            float4 _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_973bdb6610abba8aaa3cef63a78baa06_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_UV2_6_Vector2) );
            _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4);
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_R_4_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.r;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_G_5_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.g;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_B_6_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.b;
            float _SampleTexture2D_1ffc3e624270ee899e223323127b2536_A_7_Float = _SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.a;
            float3 _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_1ffc3e624270ee899e223323127b2536_RGBA_0_Vector4.xyz), _Property_30c36922aabc618192374556ee8ce299_Out_0_Float, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3);
            float3 _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_768a023761a00b8bac27ec164d4feca3_Out_2_Vector3, _NormalStrength_4e7cd17dd72ec485804b19279c62419c_Out_2_Vector3, (_FlowmapUVHeighblend_6f48bdf5d896419f980c2369df75d78a_FlowLerp_3_Float.xxx), _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3);
            UnityTexture2D _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_MediumLavaNormal);
            float4 _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV1_7_Vector2) );
            _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4);
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_R_4_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.r;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_G_5_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.g;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_B_6_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.b;
            float _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_A_7_Float = _SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.a;
            float _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float = _MediumLavaNormalScale;
            float3 _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_4f3a718c2123288ea2ba36a9344e64e9_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3);
            float4 _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fc5c5a718d5c7a8bb830b1b9effcbafe_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_UV2_6_Vector2) );
            _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4);
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_R_4_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.r;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_G_5_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.g;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_B_6_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.b;
            float _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_A_7_Float = _SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.a;
            float3 _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_e0bdc3ec5369e88bab241bd5157590f1_RGBA_0_Vector4.xyz), _Property_c488bf556481e28d8a97898896b5cdec_Out_0_Float, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3);
            float3 _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_353595f40a3cf58cb0c8a5f951505d9a_Out_2_Vector3, _NormalStrength_59ae87d6cd8faa8f9fea0640fb1a6c7c_Out_2_Vector3, (_FlowmapUVHeighblend_2150db99b9fb44ffb274d6c35bd742b9_FlowLerp_3_Float.xxx), _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3);
            float3 _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_9e03d1eca2c3de809ba034bf4abd6d2b_Blend_1_Float.xxx), _Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3);
            UnityTexture2D _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D = UnityBuildTexture2DStructNoScale(_HotLavaNormal);
            float4 _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV1_7_Vector2) );
            _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4);
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_R_4_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.r;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_G_5_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.g;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_B_6_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.b;
            float _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_A_7_Float = _SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.a;
            float _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float = _HotLavaNormalScale;
            float3 _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_571502bc4c48ad8e8d75d0743c4fd5d6_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3);
            float4 _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4 = SAMPLE_TEXTURE2D(_Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.tex, UnityBuildSamplerStateStruct(SamplerState_Linear_Repeat_Aniso8).samplerstate, _Property_fe64ffd246fb078284c5accae98534ff_Out_0_Texture2D.GetTransformedUV(_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_UV2_6_Vector2) );
            _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.rgb = UnpackNormal(_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4);
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_R_4_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.r;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_G_5_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.g;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_B_6_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.b;
            float _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_A_7_Float = _SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.a;
            float3 _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3;
            Unity_NormalStrength_float((_SampleTexture2D_785ee097397c3688ad51d76c6fc5ba77_RGBA_0_Vector4.xyz), _Property_48f492f6311fa887a8666bf46f288d9d_Out_0_Float, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3);
            float3 _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3;
            Unity_Lerp_float3(_NormalStrength_9ebe899be918d38cac53ee34e22a3dc2_Out_2_Vector3, _NormalStrength_52f08b3e9ed3698faef8a8a64e53b5cf_Out_2_Vector3, (_FlowmapUVHeighblend_39f1c972529f474fb09e72b948e339bd_FlowLerp_3_Float.xxx), _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3);
            float3 _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_e4fa486d1ccf2c89a46bb1b2e14a0f39_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_83e736f68e1ff280996cf462b7ac2718_Blend_1_Float.xxx), _Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3);
            float3 _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_85790e354b8b8189bf7442246db27aca_Out_3_Vector3, _Lerp_63c09ae12140de8da5d72b0b88f55a50_Out_3_Vector3, (_HeightBlendSplat_bcfdcd070881ce89bbfc3de1ec633b3a_Blend_1_Float.xxx), _Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3);
            float3 _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_3391b2aa0814f488ae89389fd1ac1ac5_Out_3_Vector3, _Lerp_dd9598f6e61c5d85886c8f9a886b7d1b_Out_3_Vector3, (_HeightBlendSplat_a958bd47a4d7538aa5aa113445de6eb6_Blend_1_Float.xxx), _Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3);
            float3 _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            Unity_Lerp_float3(_Lerp_ca63dbd0524b5d808a400ade38f650c2_Out_3_Vector3, _Lerp_18ff3f20527a1f80bfa8428835890e50_Out_3_Vector3, (_HeightBlendSplat_f63240de18ddc08f95c1959bab5338d0_Blend_1_Float.xxx), _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3);
            float3 _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3;
            Unity_Normalize_float3(IN.TangentSpaceViewDirection, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3);
            float _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float;
            Unity_DotProduct_float3(_Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3, _Normalize_2d8cd6029a1ca58e87a5be2e5a01e15e_Out_1_Vector3, _DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float);
            float _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float;
            Unity_Saturate_float(_DotProduct_1b51b1fafd7ac7889ee58801143c68b9_Out_2_Float, _Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float);
            float _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float;
            Unity_OneMinus_float(_Saturate_c1bb45b253bf67819366e3e0e1194a6e_Out_1_Float, _OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float);
            float _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float;
            Unity_Absolute_float(_OneMinus_ab92052166d6b88088e3ae64f07c84e3_Out_1_Float, _Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float);
            float _Power_794153891ef23b81949e6742199c05e5_Out_2_Float;
            Unity_Power_float(_Absolute_e04ab6d6feeddf82abf95ef37ffc24e6_Out_1_Float, 10, _Power_794153891ef23b81949e6742199c05e5_Out_2_Float);
            float4 _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Property_cf3addc571774c839fa810884c00cd24_Out_0_Vector4, (_Power_794153891ef23b81949e6742199c05e5_Out_2_Float.xxxx), _Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4);
            float _Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float = _RimLightPower;
            float4 _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4;
            Unity_Multiply_float4_float4(_Multiply_6e494459d9fb6b889a99993f3ac13616_Out_2_Vector4, (_Property_8211bc8906ca37889da99ea6a7e7754f_Out_0_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4);
            float4 _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Branch_f06d9316de6f4094833d37a710e8fbda_Out_3_Float.xxxx), _Multiply_d428aacc9d2cb985b24739bcbb7b49ad_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4);
            float4 _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4;
            Unity_Add_float4(_Multiply_329a32a74e6e858696ca0b345435de30_Out_2_Vector4, _Multiply_be13d295db861585b43f43be6452e40a_Out_2_Vector4, _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4);
            float4 _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4;
            Unity_Clamp_float4(_Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, float4(0, 0, 0, 0), _Add_7384245b641b208b945d188f9c0e1fdc_Out_2_Vector4, _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4);
            float4 _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4;
            Unity_Multiply_float4_float4((_Split_992c0de0de817484b2d52aeb19e22ee0_A_4_Float.xxxx), _Clamp_ed0dfc1986298f8a8ea5d26b22a4c936_Out_3_Vector4, _Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4);
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_R_1_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[0];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_G_2_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[1];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_B_3_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[2];
            float _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float = _Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4[3];
            surface.BaseColor = (_Lerp_3f0ebe224b0a608fa630bc706a21b183_Out_3_Vector4.xyz);
            surface.Emission = (_Multiply_6d53084a8041428287e1516d476b8861_Out_2_Vector4.xyz);
            surface.Alpha = 1;
            surface.BentNormal = IN.TangentSpaceNormal;
            surface.Smoothness = _Split_ab2d68297c00de8bb6f4fe8fc688cd05_A_4_Float;
            surface.Occlusion = _Split_be0161af2d147e82901bbdfc190c174f_G_2_Float;
            surface.NormalTS = _Lerp_d308da5fddca5e80a3248ae1dcce6877_Out_3_Vector3;
            surface.Metallic = _Split_be0161af2d147e82901bbdfc190c174f_R_1_Float;
            return surface;
        }
        
            // --------------------------------------------------
            // Build Graph Inputs
            #ifdef HAVE_VFX_MODIFICATION
            #define VFX_SRP_ATTRIBUTES AttributesMesh
            #define VaryingsMeshType VaryingsMeshToPS
            #define VFX_SRP_VARYINGS VaryingsMeshType
            #define VFX_SRP_SURFACE_INPUTS FragInputs
            #endif
            #ifdef TESSELLATION_ON
        
        float GetTessellationFactor(AttributesMesh input)
        {
            float tessellationFactor = 1.0;
        
            // build graph inputs
            VertexDescriptionInputs vertexDescriptionInputs = AttributesMeshToVertexDescriptionInputs(input);
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            tessellationFactor = vertexDescription.TessellationFactor;
        
            return tessellationFactor;
        }
        
        float GetMaxDisplacement()
        {
            return _TessellationMaxDisplacement;
        }
        
        // TODO: We should generate this struct like all the other varying struct
        VaryingsMeshToDS InterpolateWithBaryCoordsMeshToDS(VaryingsMeshToDS input0, VaryingsMeshToDS input1, VaryingsMeshToDS input2, float3 baryCoords)
        {
            VaryingsMeshToDS output;
        
            UNITY_TRANSFER_INSTANCE_ID(input0, output);
        
            TESSELLATION_INTERPOLATE_BARY(positionRWS, baryCoords);
            output.positionPredisplacementRWS = output.positionRWS;
            TESSELLATION_INTERPOLATE_BARY(normalWS, baryCoords);
        #ifdef VARYINGS_DS_NEED_TANGENT
            // This will interpolate the sign but should be ok in practice as we may expect a triangle to have same sign (? TO CHECK)
            TESSELLATION_INTERPOLATE_BARY(tangentWS, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD0
            TESSELLATION_INTERPOLATE_BARY(texCoord0, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD1
            TESSELLATION_INTERPOLATE_BARY(texCoord1, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD2
            TESSELLATION_INTERPOLATE_BARY(texCoord2, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_TEXCOORD3
            TESSELLATION_INTERPOLATE_BARY(texCoord3, baryCoords);
        #endif
        #ifdef VARYINGS_DS_NEED_COLOR
            TESSELLATION_INTERPOLATE_BARY(color, baryCoords);
        #endif
        
            // Pass-Through for custom interpolator
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorInterpolateWithBaryCoordsMeshToDS' */
        
            return output;
        }
        
        VertexDescriptionInputs VaryingsMeshToDSToVertexDescriptionInputs(VaryingsMeshToDS input)
        {
            VertexDescriptionInputs output;
            ZERO_INITIALIZE(VertexDescriptionInputs, output);
        
        
            return output;
        }
        
        #ifdef HAVE_TESSELLATION_MODIFICATION
        // tessellationFactors
        // x - 1->2 edge
        // y - 2->0 edge
        // z - 0->1 edge
        // w - inside tessellation factor
        VaryingsMeshToDS ApplyTessellationModification(VaryingsMeshToDS input, float3 timeParameters)
        {
            // HACK: As there is no specific tessellation stage for now in shadergraph, we reuse the vertex description mechanism.
            // It mean we store TessellationFactor inside vertex description causing extra read on both vertex and hull stage, but unusued paramater are optimize out by the shader compiler, so no impact.
            VertexDescriptionInputs vertexDescriptionInputs = VaryingsMeshToDSToVertexDescriptionInputs(input);
            // Override time paramters with used one (This is required to correctly handle motion vector for tessellation animation based on time)
        
            VertexDescription vertexDescription = VertexDescriptionFunction(vertexDescriptionInputs);
            input.positionRWS += vertexDescription.TessellationDisplacement;
        
            return input;
        }
        
        #endif
        
        #ifdef USE_CUSTOMINTERP_SUBSTRUCT
        
        // This will evaluate the custom interpolator and update the varying structure
        void VertMeshTesselationCustomInterpolation(VaryingsMeshToDS input, inout VaryingsMeshToPS output)
        {
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorVertMeshTesselationCustomInterpolation' */
        }
        
        #endif // USE_CUSTOMINTERP_SUBSTRUCT
        
        #endif // TESSELLATION_ON
            SurfaceDescriptionInputs FragInputsToSurfaceDescriptionInputs(FragInputs input, float3 viewWS)
        {
            SurfaceDescriptionInputs output;
            ZERO_INITIALIZE(SurfaceDescriptionInputs, output);
        
            output.WorldSpaceNormal =                           normalize(input.tangentToWorld[2].xyz);
            #if defined(SHADER_STAGE_RAY_TRACING)
            #else
            #endif
            output.TangentSpaceNormal =                         float3(0.0f, 0.0f, 1.0f);
            output.WorldSpaceTangent =                          input.tangentToWorld[0].xyz;
            output.WorldSpaceBiTangent =                        input.tangentToWorld[1].xyz;
            output.WorldSpaceViewDirection =                    normalize(viewWS);
            float3x3 tangentSpaceTransform =                    float3x3(output.WorldSpaceTangent,output.WorldSpaceBiTangent,output.WorldSpaceNormal);
            output.TangentSpaceViewDirection =                  TransformWorldToTangent(output.WorldSpaceViewDirection, tangentSpaceTransform);
        
        #if UNITY_UV_STARTS_AT_TOP
        #else
        #endif
        
        
            output.uv0 =                                        input.texCoord0;
            output.uv2 =                                        input.texCoord2;
            output.uv3 =                                        input.texCoord3;
            output.VertexColor =                                input.color;
            output.TimeParameters =                             _TimeParameters.xyz; // This is mainly for LW as HD overwrite this value
        
            // splice point to copy frag inputs custom interpolator pack into the SDI
            /* WARNING: $splice Could not find named fragment 'CustomInterpolatorCopyToSDI' */
        
            return output;
        }
        
            // --------------------------------------------------
            // Build Surface Data (Specific Material)
        
        void ApplyDecalToSurfaceDataNoNormal(DecalSurfaceData decalSurfaceData, inout SurfaceData surfaceData);
        
        void ApplyDecalAndGetNormal(FragInputs fragInputs, PositionInputs posInput, SurfaceDescription surfaceDescription,
            inout SurfaceData surfaceData)
        {
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
        #ifdef DECAL_NORMAL_BLENDING
            // SG nodes don't ouptut surface gradients, so if decals require surf grad blending, we have to convert
            // the normal to gradient before applying the decal. We then have to resolve the gradient back to world space
            float3 normalTS;
        
            normalTS = SurfaceGradientFromTangentSpaceNormalAndFromTBN(surfaceDescription.NormalTS,
            fragInputs.tangentToWorld[0], fragInputs.tangentToWorld[1]);
        
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, fragInputs.tangentToWorld[2], normalTS);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        
            GetNormalWS_SG(fragInputs, normalTS, surfaceData.normalWS, doubleSidedConstants);
        #else
            // normal delivered to master node
            GetNormalWS(fragInputs, surfaceDescription.NormalTS, surfaceData.normalWS, doubleSidedConstants);
        
            #if HAVE_DECALS
            if (_EnableDecals)
            {
                float alpha = 1.0;
                alpha = surfaceDescription.Alpha;
        
                // Both uses and modifies 'surfaceData.normalWS'.
                DecalSurfaceData decalSurfaceData = GetDecalSurfaceData(posInput, fragInputs, alpha);
                ApplyDecalToSurfaceNormal(decalSurfaceData, surfaceData.normalWS.xyz);
                ApplyDecalToSurfaceDataNoNormal(decalSurfaceData, surfaceData);
            }
            #endif
        #endif
        }
        void BuildSurfaceData(FragInputs fragInputs, inout SurfaceDescription surfaceDescription, float3 V, PositionInputs posInput, out SurfaceData surfaceData, out float3 bentNormalWS)
        {
            ZERO_INITIALIZE(SurfaceData, surfaceData);
        
            // specularOcclusion need to be init ahead of decal to quiet the compiler that modify the SurfaceData struct
            // however specularOcclusion can come from the graph, so need to be init here so it can be override.
            surfaceData.specularOcclusion = 1.0;
        
            surfaceData.baseColor =                 surfaceDescription.BaseColor;
            surfaceData.perceptualSmoothness =      surfaceDescription.Smoothness;
            surfaceData.ambientOcclusion =          surfaceDescription.Occlusion;
            surfaceData.metallic =                  surfaceDescription.Metallic;
        
            #if defined(_REFRACTION_PLANE) || defined(_REFRACTION_SPHERE) || defined(_REFRACTION_THIN)
                if (_EnableSSRefraction)
                {
        
                    surfaceData.transmittanceMask = (1.0 - surfaceDescription.Alpha);
                    surfaceDescription.Alpha = 1.0;
                }
                else
                {
                    surfaceData.ior = 1.0;
                    surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                    surfaceData.atDistance = 1.0;
                    surfaceData.transmittanceMask = 0.0;
                    surfaceDescription.Alpha = 1.0;
                }
            #else
                surfaceData.ior = 1.0;
                surfaceData.transmittanceColor = float3(1.0, 1.0, 1.0);
                surfaceData.atDistance = 1.0;
                surfaceData.transmittanceMask = 0.0;
            #endif
        
            // These static material feature allow compile time optimization
            surfaceData.materialFeatures = MATERIALFEATUREFLAGS_LIT_STANDARD;
            #ifdef _MATERIAL_FEATURE_SUBSURFACE_SCATTERING
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SUBSURFACE_SCATTERING;
            #endif
        
            #ifdef _MATERIAL_FEATURE_TRANSMISSION
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_TRANSMISSION;
            #endif
        
            #ifdef _MATERIAL_FEATURE_ANISOTROPY
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_ANISOTROPY;
        
                // Initialize the normal to something non-zero to avoid a div-zero warning for anisotropy.
                surfaceData.normalWS = float3(0, 1, 0);
            #endif
        
            #ifdef _MATERIAL_FEATURE_IRIDESCENCE
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_IRIDESCENCE;
            #endif
        
            #ifdef _MATERIAL_FEATURE_SPECULAR_COLOR
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_SPECULAR_COLOR;
            #endif
        
            #ifdef _MATERIAL_FEATURE_CLEAR_COAT
                surfaceData.materialFeatures |= MATERIALFEATUREFLAGS_LIT_CLEAR_COAT;
            #endif
        
            #if defined (_MATERIAL_FEATURE_SPECULAR_COLOR) && defined (_ENERGY_CONSERVING_SPECULAR)
                // Require to have setup baseColor
                // Reproduce the energy conservation done in legacy Unity. Not ideal but better for compatibility and users can unchek it
                surfaceData.baseColor *= (1.0 - Max3(surfaceData.specularColor.r, surfaceData.specularColor.g, surfaceData.specularColor.b));
            #endif
        
            float3 doubleSidedConstants = GetDoubleSidedConstants();
        
            ApplyDecalAndGetNormal(fragInputs, posInput, surfaceDescription, surfaceData);
        
            surfaceData.geomNormalWS = fragInputs.tangentToWorld[2];
        
            surfaceData.tangentWS = normalize(fragInputs.tangentToWorld[0].xyz);    // The tangent is not normalize in tangentToWorld for mikkt. TODO: Check if it expected that we normalize with Morten. Tag: SURFACE_GRADIENT
        
        
            bentNormalWS = surfaceData.normalWS;
        
            surfaceData.tangentWS = Orthonormalize(surfaceData.tangentWS, surfaceData.normalWS);
        
            #ifdef DEBUG_DISPLAY
                if (_DebugMipMapMode != DEBUGMIPMAPMODE_NONE)
                {
                    // TODO: need to update mip info
                    surfaceData.metallic = 0;
                }
        
                // We need to call ApplyDebugToSurfaceData after filling the surfarcedata and before filling builtinData
                // as it can modify attribute use for static lighting
                ApplyDebugToSurfaceData(fragInputs.tangentToWorld, surfaceData);
            #endif
        
            // By default we use the ambient occlusion with Tri-ace trick (apply outside) for specular occlusion.
            // If user provide bent normal then we process a better term
            #if defined(_SPECULAR_OCCLUSION_CUSTOM)
                // Just use the value passed through via the slot (not active otherwise)
            #elif defined(_SPECULAR_OCCLUSION_FROM_AO_BENT_NORMAL)
                // If we have bent normal and ambient occlusion, process a specular occlusion
                surfaceData.specularOcclusion = GetSpecularOcclusionFromBentAO(V, bentNormalWS, surfaceData.normalWS, surfaceData.ambientOcclusion, PerceptualSmoothnessToPerceptualRoughness(surfaceData.perceptualSmoothness));
            #elif defined(_AMBIENT_OCCLUSION) && defined(_SPECULAR_OCCLUSION_FROM_AO)
                surfaceData.specularOcclusion = GetSpecularOcclusionFromAmbientOcclusion(ClampNdotV(dot(surfaceData.normalWS, V)), surfaceData.ambientOcclusion, PerceptualSmoothnessToRoughness(surfaceData.perceptualSmoothness));
            #endif
        
            #if defined(_ENABLE_GEOMETRIC_SPECULAR_AA) && !defined(SHADER_STAGE_RAY_TRACING)
                surfaceData.perceptualSmoothness = GeometricNormalFiltering(surfaceData.perceptualSmoothness, fragInputs.tangentToWorld[2], surfaceDescription.SpecularAAScreenSpaceVariance, surfaceDescription.SpecularAAThreshold);
            #endif
        }
        
            // --------------------------------------------------
            // Get Surface And BuiltinData
        
            void GetSurfaceAndBuiltinData(FragInputs fragInputs, float3 V, inout PositionInputs posInput, out SurfaceData surfaceData, out BuiltinData builtinData RAY_TRACING_OPTIONAL_PARAMETERS)
            {
                // Don't dither if displaced tessellation (we're fading out the displacement instead to match the next LOD)
                #if !defined(SHADER_STAGE_RAY_TRACING) && !defined(_TESSELLATION_DISPLACEMENT)
                #ifdef LOD_FADE_CROSSFADE // enable dithering LOD transition if user select CrossFade transition in LOD group
                LODDitheringTransition(ComputeFadeMaskSeed(V, posInput.positionSS), unity_LODFade.x);
                #endif
                #endif
        
                #ifndef SHADER_UNLIT
                #ifdef _DOUBLESIDED_ON
                    float3 doubleSidedConstants = _DoubleSidedConstants.xyz;
                #else
                    float3 doubleSidedConstants = float3(1.0, 1.0, 1.0);
                #endif
        
                ApplyDoubleSidedFlipOrMirror(fragInputs, doubleSidedConstants); // Apply double sided flip on the vertex normal
                #endif // SHADER_UNLIT
        
                SurfaceDescriptionInputs surfaceDescriptionInputs = FragInputsToSurfaceDescriptionInputs(fragInputs, V);
        
                #if defined(HAVE_VFX_MODIFICATION)
                GraphProperties properties;
                ZERO_INITIALIZE(GraphProperties, properties);
        
                GetElementPixelProperties(fragInputs, properties);
        
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs, properties);
                #else
                SurfaceDescription surfaceDescription = SurfaceDescriptionFunction(surfaceDescriptionInputs);
                #endif
        
                // Perform alpha test very early to save performance (a killed pixel will not sample textures)
                // TODO: split graph evaluation to grab just alpha dependencies first? tricky..
                #ifdef _ALPHATEST_ON
                    float alphaCutoff = surfaceDescription.AlphaClipThreshold;
                    #if SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_PREPASS
                    // The TransparentDepthPrepass is also used with SSR transparent.
                    // If an artists enable transaprent SSR but not the TransparentDepthPrepass itself, then we use AlphaClipThreshold
                    // otherwise if TransparentDepthPrepass is enabled we use AlphaClipThresholdDepthPrepass
                    #elif SHADERPASS == SHADERPASS_TRANSPARENT_DEPTH_POSTPASS
                    // DepthPostpass always use its own alpha threshold
                    alphaCutoff = surfaceDescription.AlphaClipThresholdDepthPostpass;
                    #elif (SHADERPASS == SHADERPASS_SHADOWS) || (SHADERPASS == SHADERPASS_RAYTRACING_VISIBILITY)
                    // If use shadow threshold isn't enable we don't allow any test
                    #endif
        
                    GENERIC_ALPHA_TEST(surfaceDescription.Alpha, alphaCutoff);
                #endif
        
                #if !defined(SHADER_STAGE_RAY_TRACING) && _DEPTHOFFSET_ON
                ApplyDepthOffsetPositionInput(V, surfaceDescription.DepthOffset, GetViewForwardDir(), GetWorldToHClipMatrix(), posInput);
                #endif
        
                #ifndef SHADER_UNLIT
                float3 bentNormalWS;
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData, bentNormalWS);
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD1
                    float4 lightmapTexCoord1 = fragInputs.texCoord1;
                #else
                    float4 lightmapTexCoord1 = float4(0,0,0,0);
                #endif
        
                #ifdef FRAG_INPUTS_USE_TEXCOORD2
                    float4 lightmapTexCoord2 = fragInputs.texCoord2;
                #else
                    float4 lightmapTexCoord2 = float4(0,0,0,0);
                #endif
        
                // Builtin Data
                // For back lighting we use the oposite vertex normal
                InitBuiltinData(posInput, surfaceDescription.Alpha, bentNormalWS, -fragInputs.tangentToWorld[2], lightmapTexCoord1, lightmapTexCoord2, builtinData);
        
                #else
                BuildSurfaceData(fragInputs, surfaceDescription, V, posInput, surfaceData);
        
                ZERO_BUILTIN_INITIALIZE(builtinData); // No call to InitBuiltinData as we don't have any lighting
                builtinData.opacity = surfaceDescription.Alpha;
        
                #if defined(DEBUG_DISPLAY)
                    // Light Layers are currently not used for the Unlit shader (because it is not lit)
                    // But Unlit objects do cast shadows according to their rendering layer mask, which is what we want to
                    // display in the light layers visualization mode, therefore we need the renderingLayers
                    builtinData.renderingLayers = GetMeshRenderingLightLayer();
                #endif
        
                #endif // SHADER_UNLIT
        
                #ifdef _ALPHATEST_ON
                    // Used for sharpening by alpha to mask - Alpha to covertage is only used with depth only and forward pass (no shadow pass, no transparent pass)
                    builtinData.alphaClipTreshold = alphaCutoff;
                #endif
        
                // override sampleBakedGI - not used by Unlit
        
                builtinData.emissiveColor = surfaceDescription.Emission;
        
                // Note this will not fully work on transparent surfaces (can check with _SURFACE_TYPE_TRANSPARENT define)
                // We will always overwrite vt feeback with the nearest. So behind transparent surfaces vt will not be resolved
                // This is a limitation of the current MRT approach.
                #ifdef UNITY_VIRTUAL_TEXTURING
                #endif
        
                #if _DEPTHOFFSET_ON
                builtinData.depthOffset = surfaceDescription.DepthOffset;
                #endif
        
                // TODO: We should generate distortion / distortionBlur for non distortion pass
                #if (SHADERPASS == SHADERPASS_DISTORTION)
                builtinData.distortion = surfaceDescription.Distortion;
                builtinData.distortionBlur = surfaceDescription.DistortionBlur;
                #endif
        
                #ifndef SHADER_UNLIT
                // PostInitBuiltinData call ApplyDebugToBuiltinData
                PostInitBuiltinData(V, posInput, surfaceData, builtinData);
                #else
                ApplyDebugToBuiltinData(builtinData);
                #endif
        
                RAY_TRACING_OPTIONAL_ALPHA_TEST_PASS
            }
        
            // --------------------------------------------------
            // Main
        
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/ShaderPass/ShaderPassPathTracing.hlsl"
        
            // --------------------------------------------------
            // Visual Effect Vertex Invocations
        
        	#ifdef HAVE_VFX_MODIFICATION
        	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/VisualEffectVertex.hlsl"
        	#endif
        
            ENDHLSL
        }
    }
    CustomEditor "UnityEditor.ShaderGraph.GenericShaderGraphMaterialGUI"
    CustomEditorForRenderPipeline "Rendering.HighDefinition.LitShaderGraphGUI" "UnityEngine.Rendering.HighDefinition.HDRenderPipelineAsset"
    FallBack "Hidden/Shader Graph/FallbackError"
}